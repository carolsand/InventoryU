[{"/home/carolsand/Development/InventoryU/src/index.js":"1","/home/carolsand/Development/InventoryU/src/serviceWorker.js":"2","/home/carolsand/Development/InventoryU/src/pages/App/App.js":"3","/home/carolsand/Development/InventoryU/src/components/Profiles/Profile.jsx":"4","/home/carolsand/Development/InventoryU/src/components/Rooms/Rooms.jsx":"5","/home/carolsand/Development/InventoryU/src/components/Inventory/Inventory.jsx":"6","/home/carolsand/Development/InventoryU/src/utils/userService.js":"7","/home/carolsand/Development/InventoryU/src/utils/inventoryService.js":"8","/home/carolsand/Development/InventoryU/src/utils/roomService.js":"9","/home/carolsand/Development/InventoryU/src/pages/HomePage/HomePage.jsx":"10","/home/carolsand/Development/InventoryU/src/pages/InventoryPage/InventoryPage.jsx":"11","/home/carolsand/Development/InventoryU/src/pages/ProfilePage/ProfilePage.jsx":"12","/home/carolsand/Development/InventoryU/src/pages/SignupPage/SignupPage.jsx":"13","/home/carolsand/Development/InventoryU/src/pages/CreateInventoryPage/CreateInventory.jsx":"14","/home/carolsand/Development/InventoryU/src/pages/LoginPage/LoginPage.jsx":"15","/home/carolsand/Development/InventoryU/src/components/NavBar/NavBar.jsx":"16","/home/carolsand/Development/InventoryU/src/utils/tokenService.js":"17","/home/carolsand/Development/InventoryU/src/components/SignupForm/SignupForm.jsx":"18","/home/carolsand/Development/InventoryU/src/components/InventoryForm/InventoryForm.jsx":"19"},{"size":618,"mtime":1615345624902,"results":"20","hashOfConfig":"21"},{"size":5086,"mtime":1615345624940,"results":"22","hashOfConfig":"21"},{"size":5515,"mtime":1615620934623,"results":"23","hashOfConfig":"21"},{"size":288,"mtime":1615618108495,"results":"24","hashOfConfig":"21"},{"size":431,"mtime":1615614101138,"results":"25","hashOfConfig":"21"},{"size":1524,"mtime":1615618198216,"results":"26","hashOfConfig":"21"},{"size":1232,"mtime":1615345624949,"results":"27","hashOfConfig":"21"},{"size":1565,"mtime":1615345624944,"results":"28","hashOfConfig":"21"},{"size":1764,"mtime":1615345624946,"results":"29","hashOfConfig":"21"},{"size":408,"mtime":1615603643424,"results":"30","hashOfConfig":"21"},{"size":824,"mtime":1615605690862,"results":"31","hashOfConfig":"21"},{"size":365,"mtime":1615345624932,"results":"32","hashOfConfig":"21"},{"size":1077,"mtime":1615345624937,"results":"33","hashOfConfig":"21"},{"size":326,"mtime":1615345624915,"results":"34","hashOfConfig":"21"},{"size":1832,"mtime":1615345624928,"results":"35","hashOfConfig":"21"},{"size":1383,"mtime":1615605526346,"results":"36","hashOfConfig":"21"},{"size":933,"mtime":1615345624948,"results":"37","hashOfConfig":"21"},{"size":2606,"mtime":1615345624896,"results":"38","hashOfConfig":"21"},{"size":3904,"mtime":1615345624879,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"trtwkp",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/home/carolsand/Development/InventoryU/src/index.js",[],["85","86"],"/home/carolsand/Development/InventoryU/src/serviceWorker.js",[],"/home/carolsand/Development/InventoryU/src/pages/App/App.js",[],"/home/carolsand/Development/InventoryU/src/components/Profiles/Profile.jsx",[],"/home/carolsand/Development/InventoryU/src/components/Rooms/Rooms.jsx",[],"/home/carolsand/Development/InventoryU/src/components/Inventory/Inventory.jsx",[],"/home/carolsand/Development/InventoryU/src/utils/userService.js",["87"],"import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\nfunction signup(user) {\n  console.log('This is the value of user in userService.signup()', user);\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    headers: new Headers({ 'Content-Type': 'application/json' }),\n    body: JSON.stringify(user)\n  })\n    .then(res => {\n      if (res.ok) return res.json();\n      // Probably a duplicate email\n      throw new Error('Email already taken!');\n    })\n    // Parameter destructuring!\n    .then(({ token }) => tokenService.setToken(token));\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({ 'Content-Type': 'application/json' }),\n    body: JSON.stringify(creds)\n  })\n    .then(res => {\n      // Valid login if we have a status of 2xx (res.ok)\n      if (res.ok) return res.json();\n      throw new Error('Bad Credentials!');\n    })\n    .then(({ token }) => tokenService.setToken(token));\n}\n\nexport default {\n  signup,\n  getUser,\n  logout,\n  login\n};","/home/carolsand/Development/InventoryU/src/utils/inventoryService.js",["88"],"const BASE_URL = '/api/inventory/';\n\nexport default {\n  create,\n  getInventory,\n  deleteInventory,\n  addRoomToInventory,\n  updateInventory,\n  deleteRoomFromInventory\n};\n\nfunction create(inventory) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(inventory)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n}\n\nfunction getInventory() {\n  return fetch(BASE_URL).then(res => res.json());\n}\n\n// function getNewRoom() {\n//   return fetch(BASE_URL).then(res => res.json());\n// }\n\nfunction addRoomToInventory(room) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n  \n}\n\nfunction deleteRoomFromInventory(room) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n\n}\n\nfunction updateInventory(inventory) {\n  const options = {\n    method: 'PATCH',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(inventory)\n  };\n  return fetch(BASE_URL + \"update\", options).then(res => res.json());\n}\n\nfunction deleteInventory(inventory) {\n  const options = {\n    method: 'DELETE',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(inventory)\n  };\n  return fetch(BASE_URL + \"update\", options).then(res => res.json());\n}\n","/home/carolsand/Development/InventoryU/src/utils/roomService.js",["89"],"const BASE_URL = '/api/room/';\n\nexport default {\n  create,\n  getRooms,\n  deleteRoom,\n  addRoomToInventory,\n  addItemToRoom,\n  deleteItemFromRoom,\n  updateRoom\n};\n\nfunction create(room) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n}\n\nfunction getRooms() {\n  return fetch(BASE_URL).then(res => res.json());\n}\n\n// function getNewRoom() {\n//   return fetch(BASE_URL).then(res => res.json());\n// }\n\nfunction addRoomToInventory(room) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n  \n}\n\nfunction addItemToRoom(item) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(item)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n\n}\n\nfunction deleteItemFromRoom(item) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    };\n    return fetch(BASE_URL, options).then(res => res.json());\n  \n  }\n  \n\nfunction updateRoom(room) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL + \"update\", options).then(res => res.json());\n}\n\nfunction deleteRoom(room) {\n  const options = {\n    method: 'DELETE',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL + \"update\", options).then(res => res.json());\n}\n","/home/carolsand/Development/InventoryU/src/pages/HomePage/HomePage.jsx",[],["90","91"],"/home/carolsand/Development/InventoryU/src/pages/InventoryPage/InventoryPage.jsx",[],"/home/carolsand/Development/InventoryU/src/pages/ProfilePage/ProfilePage.jsx",[],["92","93"],"/home/carolsand/Development/InventoryU/src/pages/SignupPage/SignupPage.jsx",[],"/home/carolsand/Development/InventoryU/src/pages/CreateInventoryPage/CreateInventory.jsx",[],"/home/carolsand/Development/InventoryU/src/pages/LoginPage/LoginPage.jsx",[],"/home/carolsand/Development/InventoryU/src/components/NavBar/NavBar.jsx",[],"/home/carolsand/Development/InventoryU/src/utils/tokenService.js",["94"],"\nfunction setToken(token) {\n    if (token) {\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  //Decodes the token, then extracts and returns the user object\n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  \n  function removeToken() {\n    localStorage.removeItem('token');\n  }\n  \n  export default {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };","/home/carolsand/Development/InventoryU/src/components/SignupForm/SignupForm.jsx",[],"/home/carolsand/Development/InventoryU/src/components/InventoryForm/InventoryForm.jsx",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":45,"column":1,"nodeType":"101","endLine":50,"endColumn":3},{"ruleId":"99","severity":1,"message":"100","line":3,"column":1,"nodeType":"101","endLine":10,"endColumn":3},{"ruleId":"99","severity":1,"message":"100","line":3,"column":1,"nodeType":"101","endLine":11,"endColumn":3},{"ruleId":"95","replacedBy":"102"},{"ruleId":"97","replacedBy":"103"},{"ruleId":"95","replacedBy":"104"},{"ruleId":"97","replacedBy":"105"},{"ruleId":"99","severity":1,"message":"100","line":34,"column":3,"nodeType":"101","endLine":39,"endColumn":5},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["106"],["107"],["106"],["107"],"no-global-assign","no-unsafe-negation"]