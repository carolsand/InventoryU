[{"/home/carolsand/DevProjects/InventoryU/src/index.js":"1","/home/carolsand/DevProjects/InventoryU/src/serviceWorker.js":"2","/home/carolsand/DevProjects/InventoryU/src/pages/App/App.js":"3","/home/carolsand/DevProjects/InventoryU/src/utils/roomService.js":"4","/home/carolsand/DevProjects/InventoryU/src/utils/inventoryService.js":"5","/home/carolsand/DevProjects/InventoryU/src/utils/userService.js":"6","/home/carolsand/DevProjects/InventoryU/src/pages/SignupPage/SignupPage.jsx":"7","/home/carolsand/DevProjects/InventoryU/src/pages/InventoryPage/InventoryPage.jsx":"8","/home/carolsand/DevProjects/InventoryU/src/pages/LoginPage/LoginPage.jsx":"9","/home/carolsand/DevProjects/InventoryU/src/pages/ProfilePage/ProfilePage.jsx":"10","/home/carolsand/DevProjects/InventoryU/src/pages/HomePage/HomePage.jsx":"11","/home/carolsand/DevProjects/InventoryU/src/pages/CreateInventoryPage/CreateInventory.jsx":"12","/home/carolsand/DevProjects/InventoryU/src/components/NavBar/NavBar.jsx":"13","/home/carolsand/DevProjects/InventoryU/src/utils/tokenService.js":"14","/home/carolsand/DevProjects/InventoryU/src/components/SignupForm/SignupForm.jsx":"15","/home/carolsand/DevProjects/InventoryU/src/components/InventoryForm/InventoryForm.jsx":"16"},{"size":618,"mtime":1610847633981,"results":"17","hashOfConfig":"18"},{"size":5086,"mtime":1610847634003,"results":"19","hashOfConfig":"18"},{"size":3855,"mtime":1611023394133,"results":"20","hashOfConfig":"18"},{"size":1764,"mtime":1610847634006,"results":"21","hashOfConfig":"18"},{"size":1564,"mtime":1610858140145,"results":"22","hashOfConfig":"18"},{"size":1232,"mtime":1610847634008,"results":"23","hashOfConfig":"18"},{"size":1077,"mtime":1610847634001,"results":"24","hashOfConfig":"18"},{"size":354,"mtime":1610847633995,"results":"25","hashOfConfig":"18"},{"size":1832,"mtime":1610847633997,"results":"26","hashOfConfig":"18"},{"size":346,"mtime":1610847633999,"results":"27","hashOfConfig":"18"},{"size":334,"mtime":1610847633991,"results":"28","hashOfConfig":"18"},{"size":900,"mtime":1610847633989,"results":"29","hashOfConfig":"18"},{"size":1383,"mtime":1610847633971,"results":"30","hashOfConfig":"18"},{"size":933,"mtime":1610847634007,"results":"31","hashOfConfig":"18"},{"size":2606,"mtime":1610847633978,"results":"32","hashOfConfig":"18"},{"size":4455,"mtime":1610847633969,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ngjn8w",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"/home/carolsand/DevProjects/InventoryU/src/index.js",[],["73","74"],"/home/carolsand/DevProjects/InventoryU/src/serviceWorker.js",[],"/home/carolsand/DevProjects/InventoryU/src/pages/App/App.js",["75","76"],"import React, {Component} from 'react';\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport './App.css';\n\n/* The following imports are named exports from inventoryu */\nimport userService from '../../utils/userService';\nimport roomService from '../../utils/roomService';\nimport inventoryService from '../../utils/inventoryService';\nimport HomePage from '../HomePage/HomePage';\nimport InventoryPage from '../InventoryPage/InventoryPage';\nimport CreateInventory from '../CreateInventoryPage/CreateInventory';\nimport SignupPage from '../SignupPage/SignupPage';\nimport LoginPage from '../LoginPage/LoginPage';\nimport NavBar from '../../components/NavBar/NavBar';\nimport ProfilePage from '../ProfilePage/ProfilePage';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      // Initialize user if there's a token, otherwise null\n      user: userService.getUser(),\n      room: [],\n      item: [],\n      profile: []\n    };\n  }\n  \n  \n  handleLogout = () => {\n    userService.logout();\n    this.setState({ user: null });\n  }\n\n  handleSignupOrLogin = () => {\n    this.setState({ user: userService.getUser() });\n    //console.log(\"Logged in usr---->\", user);\n  }\n\n  handleCreateInventory = () => {\n    this.setState({user: userService.getUser()})\n    const inventory = inventoryService.create();\n  }\n\n  handleCreateRoom = () => {\n    const room = this.setState({user: roomService.create(room)})\n  }\n\n  handleGetInventory = () => {\n    const inventory = inventoryService.getInventory();\n    this.setState({user: inventoryService.show(inventory)})\n  }\n\n  async componentDidMount () {\n    let inventory = await inventoryService.getInventory(this.user);\n    // const inventory = await inventoryService.getInventory();\n    this.setState({inventory: inventoryService.getInventory(inventory)});\n  }\n\n  render() {\n    return ( \n      <div className=\"\"> \n        <header className='container'> &nbsp;&nbsp;&nbsp; Take Inventory Before Disaster Strikes  </header>\n          <NavBar \n            user={this.state.user}\n            handleLogout={this.handleLogout}\n            />\n         <Switch>\n          <Route exact path='/' render={({ history }) =>\n            < HomePage \n              handleSignupOrLogin={this.handleSignupOrLogin}\n            />\n            \n          } />\n          <Route exact path='/signup' render={({ history }) =>\n            <SignupPage\n              history={history}\n              handleSignupOrLogin={this.handleSignupOrLogin}\n            />\n          } />\n          <Route exact path='/login' render={({ history }) =>\n            <LoginPage\n              history={history}\n              handleSignupOrLogin={this.handleSignupOrLogin}\n            />\n          } />\n          <Route exact path='/profile' render={() =>\n            this.state.user ?\n            <ProfilePage\n              user={this.state.user}\n              profile={this.state.profile}\n              // handleGetProfile={this.handleGetProfile}\n              \n            />\n            :\n              <Redirect to='/home-page' />\n          } />\n          <Route exact path='/inventory-page' render={() =>\n            this.state.user ?\n            <InventoryPage\n             user={this.state.user}\n             inventory={this.state.inventory}\n             handleGetInventory={this.handleGetInventory}\n            />\n            :\n              <Redirect to='/Home' />\n          } />\n          <Route exact path='/create-rooms' render={() =>\n              this.state.user ?\n              <CreateInventory\n              handleCreateInventory={this.handleCreateInventory}\n              user={this.state.user}              \n              inventory={this.state.inventory}\n              />\n              :\n              <Redirect to='/inventory-Page' />\n          } />\n        </Switch> \n      </div>\n    );\n  }\n}\n\nexport default App;","/home/carolsand/DevProjects/InventoryU/src/utils/roomService.js",["77"],"const BASE_URL = '/api/room/';\n\nexport default {\n  create,\n  getRooms,\n  deleteRoom,\n  addRoomToInventory,\n  addItemToRoom,\n  deleteItemFromRoom,\n  updateRoom\n};\n\nfunction create(room) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n}\n\nfunction getRooms() {\n  return fetch(BASE_URL).then(res => res.json());\n}\n\n// function getNewRoom() {\n//   return fetch(BASE_URL).then(res => res.json());\n// }\n\nfunction addRoomToInventory(room) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n  \n}\n\nfunction addItemToRoom(item) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(item)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n\n}\n\nfunction deleteItemFromRoom(item) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    };\n    return fetch(BASE_URL, options).then(res => res.json());\n  \n  }\n  \n\nfunction updateRoom(room) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL + \"update\", options).then(res => res.json());\n}\n\nfunction deleteRoom(room) {\n  const options = {\n    method: 'DELETE',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL + \"update\", options).then(res => res.json());\n}\n","/home/carolsand/DevProjects/InventoryU/src/utils/inventoryService.js",["78"],"const BASE_URL = '/api/inventory/';\n\nexport default {\n  create,\n  getInventory,\n  deleteInventory,\n  addRoomToInventory,\n  updateInventory,\n  deleteRoomFromInventory\n};\n\nfunction create(inventory) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(inventory)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n}\n\nfunction getInventory() {\n  return fetch(BASE_URL).then(res => res.json());\n}\n\n// function getNewRoom() {\n//   return fetch(BASE_URL).then(res => res.json());\n// }\n\nfunction addRoomToInventory(room) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n  \n}\n\nfunction deleteRoomFromInventory(room) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n\n}\n\nfunction updateInventory(inventory) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(inventory)\n  };\n  return fetch(BASE_URL + \"update\", options).then(res => res.json());\n}\n\nfunction deleteInventory(inventory) {\n  const options = {\n    method: 'DELETE',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(inventory)\n  };\n  return fetch(BASE_URL + \"update\", options).then(res => res.json());\n}\n","/home/carolsand/DevProjects/InventoryU/src/utils/userService.js",["79"],"import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\nfunction signup(user) {\n  console.log('This is the value of user in userService.signup()', user);\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    headers: new Headers({ 'Content-Type': 'application/json' }),\n    body: JSON.stringify(user)\n  })\n    .then(res => {\n      if (res.ok) return res.json();\n      // Probably a duplicate email\n      throw new Error('Email already taken!');\n    })\n    // Parameter destructuring!\n    .then(({ token }) => tokenService.setToken(token));\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({ 'Content-Type': 'application/json' }),\n    body: JSON.stringify(creds)\n  })\n    .then(res => {\n      // Valid login if we have a status of 2xx (res.ok)\n      if (res.ok) return res.json();\n      throw new Error('Bad Credentials!');\n    })\n    .then(({ token }) => tokenService.setToken(token));\n}\n\nexport default {\n  signup,\n  getUser,\n  logout,\n  login\n};","/home/carolsand/DevProjects/InventoryU/src/pages/SignupPage/SignupPage.jsx",[],"/home/carolsand/DevProjects/InventoryU/src/pages/InventoryPage/InventoryPage.jsx",[],"/home/carolsand/DevProjects/InventoryU/src/pages/LoginPage/LoginPage.jsx",[],"/home/carolsand/DevProjects/InventoryU/src/pages/ProfilePage/ProfilePage.jsx",[],"/home/carolsand/DevProjects/InventoryU/src/pages/HomePage/HomePage.jsx",[],"/home/carolsand/DevProjects/InventoryU/src/pages/CreateInventoryPage/CreateInventory.jsx",[],"/home/carolsand/DevProjects/InventoryU/src/components/NavBar/NavBar.jsx",[],"/home/carolsand/DevProjects/InventoryU/src/utils/tokenService.js",["80"],"\nfunction setToken(token) {\n    if (token) {\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  //Decodes the token, then extracts and returns the user object\n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  \n  function removeToken() {\n    localStorage.removeItem('token');\n  }\n  \n  export default {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };","/home/carolsand/DevProjects/InventoryU/src/components/SignupForm/SignupForm.jsx",[],"/home/carolsand/DevProjects/InventoryU/src/components/InventoryForm/InventoryForm.jsx",[],["81","82"],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":43,"column":11,"nodeType":"89","messageId":"90","endLine":43,"endColumn":20},{"ruleId":"91","severity":1,"message":"92","line":47,"column":58,"nodeType":"89","messageId":"93","endLine":47,"endColumn":62},{"ruleId":"94","severity":1,"message":"95","line":3,"column":1,"nodeType":"96","endLine":11,"endColumn":3},{"ruleId":"94","severity":1,"message":"95","line":3,"column":1,"nodeType":"96","endLine":10,"endColumn":3},{"ruleId":"94","severity":1,"message":"95","line":45,"column":1,"nodeType":"96","endLine":50,"endColumn":3},{"ruleId":"94","severity":1,"message":"95","line":34,"column":3,"nodeType":"96","endLine":39,"endColumn":5},{"ruleId":"83","replacedBy":"97"},{"ruleId":"85","replacedBy":"98"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'inventory' is assigned a value but never used.","Identifier","unusedVar","no-use-before-define","'room' was used before it was defined.","usedBeforeDefined","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["99"],["100"],"no-global-assign","no-unsafe-negation"]