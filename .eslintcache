[{"/home/carolsand/Development/InventoryU/src/index.js":"1","/home/carolsand/Development/InventoryU/src/serviceWorker.js":"2","/home/carolsand/Development/InventoryU/src/pages/App/App.js":"3","/home/carolsand/Development/InventoryU/src/components/Profiles/Profile.jsx":"4","/home/carolsand/Development/InventoryU/src/components/Rooms/Rooms.jsx":"5","/home/carolsand/Development/InventoryU/src/components/Inventory/Inventory.jsx":"6","/home/carolsand/Development/InventoryU/src/utils/userService.js":"7","/home/carolsand/Development/InventoryU/src/utils/inventoryService.js":"8","/home/carolsand/Development/InventoryU/src/utils/roomService.js":"9","/home/carolsand/Development/InventoryU/src/pages/HomePage/HomePage.jsx":"10","/home/carolsand/Development/InventoryU/src/pages/InventoryPage/InventoryPage.jsx":"11","/home/carolsand/Development/InventoryU/src/pages/ProfilePage/ProfilePage.jsx":"12","/home/carolsand/Development/InventoryU/src/pages/SignupPage/SignupPage.jsx":"13","/home/carolsand/Development/InventoryU/src/pages/CreateInventoryPage/CreateInventory.jsx":"14","/home/carolsand/Development/InventoryU/src/pages/LoginPage/LoginPage.jsx":"15","/home/carolsand/Development/InventoryU/src/components/NavBar/NavBar.jsx":"16","/home/carolsand/Development/InventoryU/src/utils/tokenService.js":"17","/home/carolsand/Development/InventoryU/src/components/SignupForm/SignupForm.jsx":"18","/home/carolsand/Development/InventoryU/src/components/InventoryForm/InventoryForm.jsx":"19"},{"size":618,"mtime":1615345624902,"results":"20","hashOfConfig":"21"},{"size":5086,"mtime":1615345624940,"results":"22","hashOfConfig":"21"},{"size":4926,"mtime":1615604955180,"results":"23","hashOfConfig":"21"},{"size":351,"mtime":1615345624887,"results":"24","hashOfConfig":"21"},{"size":296,"mtime":1615603710608,"results":"25","hashOfConfig":"21"},{"size":1343,"mtime":1615601991817,"results":"26","hashOfConfig":"21"},{"size":1232,"mtime":1615345624949,"results":"27","hashOfConfig":"21"},{"size":1565,"mtime":1615345624944,"results":"28","hashOfConfig":"21"},{"size":1764,"mtime":1615345624946,"results":"29","hashOfConfig":"21"},{"size":408,"mtime":1615603643424,"results":"30","hashOfConfig":"21"},{"size":824,"mtime":1615605690862,"results":"31","hashOfConfig":"21"},{"size":365,"mtime":1615345624932,"results":"32","hashOfConfig":"21"},{"size":1077,"mtime":1615345624937,"results":"33","hashOfConfig":"21"},{"size":326,"mtime":1615345624915,"results":"34","hashOfConfig":"21"},{"size":1832,"mtime":1615345624928,"results":"35","hashOfConfig":"21"},{"size":1383,"mtime":1615605526346,"results":"36","hashOfConfig":"21"},{"size":933,"mtime":1615345624948,"results":"37","hashOfConfig":"21"},{"size":2606,"mtime":1615345624896,"results":"38","hashOfConfig":"21"},{"size":3904,"mtime":1615345624879,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"trtwkp",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"/home/carolsand/Development/InventoryU/src/index.js",[],["87","88"],"/home/carolsand/Development/InventoryU/src/serviceWorker.js",[],"/home/carolsand/Development/InventoryU/src/pages/App/App.js",["89","90","91","92","93"],"import React, { Component } from 'react';\nimport './App.css';\nimport { Route, Redirect, Switch } from \"react-router-dom\";\n\n/* The following imports are named exports from inventoryu */\nimport userService from '../../utils/userService';\nimport roomService from '../../utils/roomService';\nimport inventoryService from '../../utils/inventoryService';\nimport * as roomsAPI from '../../utils/roomService'\n\n/* Import Pages */\nimport HomePage from '../HomePage/HomePage';\nimport InventoryPage from '../InventoryPage/InventoryPage';\nimport CreateInventory from '../CreateInventoryPage/CreateInventory';\nimport SignupPage from '../SignupPage/SignupPage';\nimport LoginPage from '../LoginPage/LoginPage';\nimport NavBar from '../../components/NavBar/NavBar';\nimport ProfilePage from '../ProfilePage/ProfilePage';\nimport Inventory from '../../components/Inventory/Inventory.jsx';\nimport Profile from '../../components/Profiles/Profile.jsx';\nimport Room from '../../components/Rooms/Rooms.jsx';\nimport Rooms from '../../components/Rooms/Rooms.jsx';\n\nclass App extends Component {\n  constructor() {\n    super();\n    /*const [rooms, getRooms] = roomService.getRooms(); */\n    this.state = {\n      // Initialize user if there's a token, otherwise null\n      user: userService.getUser(),\n      inventory: inventoryService.getInventory(),\n      rooms: roomService.getRooms()\n    };\n  }\n\n  async componentDidMount () {\n    console.log(\"componentDidMount--->\");\n    let user = await userService.getUser();\n    // const inventory = await inventoryService.getInventory();\n    // this.setState({inventory: inventoryService.getInventory()});\n    console.log('The current logged user ------>', user);\n  }\n\n  handleLogout = () => {\n    userService.logout();\n    this.setState({ user: null });\n  }\n\n  handleSignupOrLogin = () => {\n    this.setState({ user: userService.getUser() });\n    //console.log(\"Logged in usr---->\", user);\n  }\n\n  handleCreateInventory = () => {\n    const inventory = inventoryService.create();\n    this.setState({inventory: inventoryService.create()});\n    console.log(\"Logged in user's Inventory---->\", inventory);\n  }\n\n  handleCreateRoom = () => {\n    const room = this.setState({room: roomService.create()});\n    this.setState({room: roomService.create(room)});\n    console.log(\"This is the handleCreateRoom Function in App.js ----->\");\n  }\n\n  handleGetInventory = () => {\n    const inventory = inventoryService.getInventory(); \n    console.log(\"Rooms in database -------------->\", inventory);\n    this.setState({user: inventoryService.getInventory(inventory)});\n  }\n\n  handleGetRooms = () => {\n    const rooms = roomService.getRooms();\n    this.setState({rooms: rooms});\n    console.log(\"Getting the rooms created for this profile --->\", rooms);\n  }\n\n  render() {\n    return (\n      <div className=\"\"> \n        {/* <header className='container'> &nbsp;&nbsp;&nbsp; Take Inventory Before Disaster Strikes  </header> */}\n          <NavBar \n            user={this.state.user}\n            handleLogout={this.handleLogout}\n            />\n         <Switch>\n          <Route exact path='/' render={({ history }) =>\n            <Inventory\n              history={history}\n              handleGetInventory={this.handleGetInventory}\n              user={this.getUser}\n            />\n            \n          } />\n          <Route exact path='/signup' render={({ history }) =>\n            <SignupPage\n              history={history}\n              handleSignupOrLogin={this.handleSignupOrLogin}\n            />\n          } />\n          <Route exact path='/login' render={({ history }) =>\n            <LoginPage\n              history={history}\n              handleSignupOrLogin={this.handleSignupOrLogin}\n            />\n          } />\n          <Route exact path='/profile-page' render={() =>\n            this.state.user ?\n            <Profile\n              handleGetProfile={this.handleGetProfile}\n            />\n            :\n              <Redirect to='/inventory-page' />\n          } />\n          \n          <Route exact path='/rooms-page' render={() =>\n            this.state.user ?\n            <Room\n              handleGetRooms={this.handleGetRooms}\n              rooms= {this.handleGetRooms}\n            />\n            :\n              <Redirect to='/inventory-page' />\n          } />\n          <Route exact path='/create-inventory-page' render={() =>\n              this.state.user ?\n              <CreateInventory\n              handleCreateInventory={this.handleCreateInventory}             \n              />\n              :\n              <Redirect to='/inventory-Page' />\n          } />\n          <Route exact path='/inventory-page' render={() =>\n              this.state.user ?\n              <Inventory\n              handleGetInventory={this.handleGetInventory}             \n              />\n              :\n              <Redirect to='/profile-Page' />\n          } />\n        </Switch> \n      </div>\n    );\n  }\n}\n\nexport default App;","/home/carolsand/Development/InventoryU/src/components/Profiles/Profile.jsx",["94"],"import React from 'react';\nimport './Profile.css';\nimport { Navbar } from 'react-bulma-components';\nimport ProfilePage from '../../pages/ProfilePage/ProfilePage';\n\nconst Profile = (props) => {\n    return (\n    <div className='Profile'>\n       <Navbar />\n       <h1>User Profile\n           {props.user}</h1>\n    </div>\n    );\n}\n\nexport default Profile;","/home/carolsand/Development/InventoryU/src/components/Rooms/Rooms.jsx",[],"/home/carolsand/Development/InventoryU/src/components/Inventory/Inventory.jsx",["95","96"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport roomService from '../../utils/roomService';\nimport './Inventory.css';\n\n\n// function Inventory(){\n//   return(\n//     <div> \n//       <Inventory room='Living Room' />\n//     </div>\n//   );\n// }\n\n// function Inventory ({rooms}) {\n//   return (\n//     <div>\n//     <h2>Take Inventory Before Disaster Strikes </h2>\n//     <h2>It is {new Date().toLocaleTimeString()}.</h2>\n//     {/*Inventory.map(invent => <li key={invent}>{invent}</li>)*/}\n//     <ul>\n//       {/*props.state.room*/}\n//       {/*props.inventory.map(inventory =>\n//        <button key={inventory}>{inventory}</button>\n//       ) */}\n//     </ul>\n//     <h3>Your Inventory </h3> \n//     <ul> Rooms </ul>\n//       <li>{rooms} </li>\n\n//   </div>\n//   )\n// }\n\nconst Inventory = (props) => {\n    return (\n      <div>\n        <h2>Take Inventory Before Disaster Strikes </h2>\n        <h3>It is {new Date().toLocaleTimeString()}.</h3>\n        <h4>Inventory Of Rooms </h4>\n         {/*<Inventory desc={props.inventory} /> */}\n        {/*Inventory.map(invent => <li key={invent}>{invent}</li>)*/}\n        <ul>\n          <li>{}</li>\n          {/*props.inventory.map(inventory =>\n           <button key={inventory}>{inventory}</button>\n          ) */}\n        </ul> \n      </div>\n    );\n  }\n\nexport default Inventory;","/home/carolsand/Development/InventoryU/src/utils/userService.js",["97"],"import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\nfunction signup(user) {\n  console.log('This is the value of user in userService.signup()', user);\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    headers: new Headers({ 'Content-Type': 'application/json' }),\n    body: JSON.stringify(user)\n  })\n    .then(res => {\n      if (res.ok) return res.json();\n      // Probably a duplicate email\n      throw new Error('Email already taken!');\n    })\n    // Parameter destructuring!\n    .then(({ token }) => tokenService.setToken(token));\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({ 'Content-Type': 'application/json' }),\n    body: JSON.stringify(creds)\n  })\n    .then(res => {\n      // Valid login if we have a status of 2xx (res.ok)\n      if (res.ok) return res.json();\n      throw new Error('Bad Credentials!');\n    })\n    .then(({ token }) => tokenService.setToken(token));\n}\n\nexport default {\n  signup,\n  getUser,\n  logout,\n  login\n};","/home/carolsand/Development/InventoryU/src/utils/inventoryService.js",["98"],"const BASE_URL = '/api/inventory/';\n\nexport default {\n  create,\n  getInventory,\n  deleteInventory,\n  addRoomToInventory,\n  updateInventory,\n  deleteRoomFromInventory\n};\n\nfunction create(inventory) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(inventory)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n}\n\nfunction getInventory() {\n  return fetch(BASE_URL).then(res => res.json());\n}\n\n// function getNewRoom() {\n//   return fetch(BASE_URL).then(res => res.json());\n// }\n\nfunction addRoomToInventory(room) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n  \n}\n\nfunction deleteRoomFromInventory(room) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n\n}\n\nfunction updateInventory(inventory) {\n  const options = {\n    method: 'PATCH',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(inventory)\n  };\n  return fetch(BASE_URL + \"update\", options).then(res => res.json());\n}\n\nfunction deleteInventory(inventory) {\n  const options = {\n    method: 'DELETE',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(inventory)\n  };\n  return fetch(BASE_URL + \"update\", options).then(res => res.json());\n}\n","/home/carolsand/Development/InventoryU/src/utils/roomService.js",["99"],"const BASE_URL = '/api/room/';\n\nexport default {\n  create,\n  getRooms,\n  deleteRoom,\n  addRoomToInventory,\n  addItemToRoom,\n  deleteItemFromRoom,\n  updateRoom\n};\n\nfunction create(room) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n}\n\nfunction getRooms() {\n  return fetch(BASE_URL).then(res => res.json());\n}\n\n// function getNewRoom() {\n//   return fetch(BASE_URL).then(res => res.json());\n// }\n\nfunction addRoomToInventory(room) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n  \n}\n\nfunction addItemToRoom(item) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(item)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n\n}\n\nfunction deleteItemFromRoom(item) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    };\n    return fetch(BASE_URL, options).then(res => res.json());\n  \n  }\n  \n\nfunction updateRoom(room) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL + \"update\", options).then(res => res.json());\n}\n\nfunction deleteRoom(room) {\n  const options = {\n    method: 'DELETE',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL + \"update\", options).then(res => res.json());\n}\n","/home/carolsand/Development/InventoryU/src/pages/HomePage/HomePage.jsx",[],"/home/carolsand/Development/InventoryU/src/pages/InventoryPage/InventoryPage.jsx",[],"/home/carolsand/Development/InventoryU/src/pages/ProfilePage/ProfilePage.jsx",[],"/home/carolsand/Development/InventoryU/src/pages/SignupPage/SignupPage.jsx",[],"/home/carolsand/Development/InventoryU/src/pages/CreateInventoryPage/CreateInventory.jsx",[],"/home/carolsand/Development/InventoryU/src/pages/LoginPage/LoginPage.jsx",[],"/home/carolsand/Development/InventoryU/src/components/NavBar/NavBar.jsx",[],"/home/carolsand/Development/InventoryU/src/utils/tokenService.js",["100"],"\nfunction setToken(token) {\n    if (token) {\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  //Decodes the token, then extracts and returns the user object\n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  \n  function removeToken() {\n    localStorage.removeItem('token');\n  }\n  \n  export default {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };","/home/carolsand/Development/InventoryU/src/components/SignupForm/SignupForm.jsx",[],"/home/carolsand/Development/InventoryU/src/components/InventoryForm/InventoryForm.jsx",[],["101","102"],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":9,"column":13,"nodeType":"109","messageId":"110","endLine":9,"endColumn":21},{"ruleId":"107","severity":1,"message":"111","line":12,"column":8,"nodeType":"109","messageId":"110","endLine":12,"endColumn":16},{"ruleId":"107","severity":1,"message":"112","line":13,"column":8,"nodeType":"109","messageId":"110","endLine":13,"endColumn":21},{"ruleId":"107","severity":1,"message":"113","line":18,"column":8,"nodeType":"109","messageId":"110","endLine":18,"endColumn":19},{"ruleId":"107","severity":1,"message":"114","line":22,"column":8,"nodeType":"109","messageId":"110","endLine":22,"endColumn":13},{"ruleId":"107","severity":1,"message":"113","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":19},{"ruleId":"107","severity":1,"message":"115","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":14},{"ruleId":"107","severity":1,"message":"116","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":19},{"ruleId":"117","severity":1,"message":"118","line":45,"column":1,"nodeType":"119","endLine":50,"endColumn":3},{"ruleId":"117","severity":1,"message":"118","line":3,"column":1,"nodeType":"119","endLine":10,"endColumn":3},{"ruleId":"117","severity":1,"message":"118","line":3,"column":1,"nodeType":"119","endLine":11,"endColumn":3},{"ruleId":"117","severity":1,"message":"118","line":34,"column":3,"nodeType":"119","endLine":39,"endColumn":5},{"ruleId":"103","replacedBy":"120"},{"ruleId":"105","replacedBy":"121"},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'roomsAPI' is defined but never used.","Identifier","unusedVar","'HomePage' is defined but never used.","'InventoryPage' is defined but never used.","'ProfilePage' is defined but never used.","'Rooms' is defined but never used.","'Link' is defined but never used.","'roomService' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["122"],["123"],"no-global-assign","no-unsafe-negation"]