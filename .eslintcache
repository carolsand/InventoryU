[{"/home/carolsand/DevProjects/InventoryU/src/index.js":"1","/home/carolsand/DevProjects/InventoryU/src/serviceWorker.js":"2","/home/carolsand/DevProjects/InventoryU/src/pages/App/App.js":"3","/home/carolsand/DevProjects/InventoryU/src/utils/roomService.js":"4","/home/carolsand/DevProjects/InventoryU/src/utils/inventoryService.js":"5","/home/carolsand/DevProjects/InventoryU/src/utils/userService.js":"6","/home/carolsand/DevProjects/InventoryU/src/pages/SignupPage/SignupPage.jsx":"7","/home/carolsand/DevProjects/InventoryU/src/pages/InventoryPage/InventoryPage.jsx":"8","/home/carolsand/DevProjects/InventoryU/src/pages/LoginPage/LoginPage.jsx":"9","/home/carolsand/DevProjects/InventoryU/src/pages/ProfilePage/ProfilePage.jsx":"10","/home/carolsand/DevProjects/InventoryU/src/pages/HomePage/HomePage.jsx":"11","/home/carolsand/DevProjects/InventoryU/src/pages/CreateInventoryPage/CreateInventory.jsx":"12","/home/carolsand/DevProjects/InventoryU/src/components/NavBar/NavBar.jsx":"13","/home/carolsand/DevProjects/InventoryU/src/utils/tokenService.js":"14","/home/carolsand/DevProjects/InventoryU/src/components/SignupForm/SignupForm.jsx":"15","/home/carolsand/DevProjects/InventoryU/src/components/InventoryForm/InventoryForm.jsx":"16","/home/carolsand/DevProjects/InventoryU/src/components/Inventory/Inventory.jsx":"17","/home/carolsand/DevProjects/InventoryU/src/components/Rooms/Rooms.jsx":"18","/home/carolsand/DevProjects/InventoryU/src/components/Profiles/Profile.jsx":"19"},{"size":618,"mtime":1610847633981,"results":"20","hashOfConfig":"21"},{"size":5086,"mtime":1610847634003,"results":"22","hashOfConfig":"21"},{"size":4675,"mtime":1611529833801,"results":"23","hashOfConfig":"21"},{"size":1764,"mtime":1610847634006,"results":"24","hashOfConfig":"21"},{"size":1565,"mtime":1611301785779,"results":"25","hashOfConfig":"21"},{"size":1232,"mtime":1610847634008,"results":"26","hashOfConfig":"21"},{"size":1077,"mtime":1610847634001,"results":"27","hashOfConfig":"21"},{"size":359,"mtime":1611526944583,"results":"28","hashOfConfig":"21"},{"size":1832,"mtime":1610847633997,"results":"29","hashOfConfig":"21"},{"size":365,"mtime":1611390534326,"results":"30","hashOfConfig":"21"},{"size":457,"mtime":1611391066176,"results":"31","hashOfConfig":"21"},{"size":326,"mtime":1611371805899,"results":"32","hashOfConfig":"21"},{"size":1379,"mtime":1611396233857,"results":"33","hashOfConfig":"21"},{"size":933,"mtime":1610847634007,"results":"34","hashOfConfig":"21"},{"size":2606,"mtime":1610847633978,"results":"35","hashOfConfig":"21"},{"size":3904,"mtime":1611289714945,"results":"36","hashOfConfig":"21"},{"size":702,"mtime":1611529106623,"results":"37","hashOfConfig":"21"},{"size":344,"mtime":1611527359476,"results":"38","hashOfConfig":"21"},{"size":351,"mtime":1611395721121,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1ngjn8w",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"42"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"42"},"/home/carolsand/DevProjects/InventoryU/src/index.js",[],["89","90"],"/home/carolsand/DevProjects/InventoryU/src/serviceWorker.js",[],"/home/carolsand/DevProjects/InventoryU/src/pages/App/App.js",["91","92","93","94","95","96"],"import React, {Component} from 'react';\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport './App.css';\n\n/* The following imports are named exports from inventoryu */\nimport userService from '../../utils/userService';\nimport roomService from '../../utils/roomService';\nimport inventoryService from '../../utils/inventoryService';\nimport HomePage from '../HomePage/HomePage';\nimport InventoryPage from '../InventoryPage/InventoryPage';\nimport CreateInventory from '../CreateInventoryPage/CreateInventory';\nimport SignupPage from '../SignupPage/SignupPage';\nimport LoginPage from '../LoginPage/LoginPage';\nimport NavBar from '../../components/NavBar/NavBar';\nimport ProfilePage from '../ProfilePage/ProfilePage';\nimport Inventory from '../../components/Inventory/Inventory.jsx';\nimport Profile from '../../components/Profiles/Profile.jsx';\nimport Room from '../../components/Rooms/Rooms.jsx';\nimport Rooms from '../../components/Rooms/Rooms.jsx';\n\nconst user = userService.getUser();\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      // Initialize user if there's a token, otherwise null\n      user: userService.getUser(),\n      room: roomService.getRooms(),\n      inventory: inventoryService.getInventory(userService.getUser())\n    };\n  }\n\n  async componentDidMount () {\n    console.log(\"componentDidMount--->\");\n    let user = await userService.getUser();\n    // const inventory = await inventoryService.getInventory();\n    this.setState({inventory: inventoryService.getInventory(user)});\n  }\n\n\n  \n  handleLogout = () => {\n    userService.logout();\n    this.setState({ user: null });\n  }\n\n  handleSignupOrLogin = () => {\n    this.setState({ user: userService.getUser() });\n    //console.log(\"Logged in usr---->\", user);\n  }\n\n  handleCreateInventory = () => {\n    const inventory = inventoryService.create();\n    console.log(\"Logged in user's Inventory---->\", inventory);\n  }\n\n  handleCreateRoom = () => {\n    const room = this.setState({room: roomService.create()});\n    console.log(\"This is the handleCreateRoom Function in App.js ----->\");\n  }\n\n  handleGetRooms = () => {\n    const rooms = roomService.getRooms();\n    this.setState({room: roomService.getRooms()});\n    console.log(\"Getting the rooms created for this profile --->\", rooms);\n  }\n\n  handleGetInventory = () => {\n    const inventory = inventoryService.getInventory(); \n    console.log(\"Inventory in database -------------->\", inventory);\n    this.setState({user: inventoryService.show(inventory)})\n  }\n\n  \n  render() {\n    return (\n      <div className=\"\"> \n        <header className='container'> &nbsp;&nbsp;&nbsp; Take Inventory Before Disaster Strikes  </header>\n          <NavBar \n            user={this.state.user}\n            handleLogout={this.handleLogout}\n            />\n         <Switch>\n          <Route exact path='/' render={({ history }) =>\n            <Inventory\n              history={history}\n              handleGetInventory={this.handleGetInventory}\n              user={this.getUser}\n            />\n            \n          } />\n          <Route exact path='/signup' render={({ history }) =>\n            <SignupPage\n              history={history}\n              handleSignupOrLogin={this.handleSignupOrLogin}\n            />\n          } />\n          <Route exact path='/login' render={({ history }) =>\n            <LoginPage\n              history={history}\n              handleSignupOrLogin={this.handleSignupOrLogin}\n            />\n          } />\n          <Route exact path='/profile-page' render={() =>\n            this.state.user ?\n            <Profile\n              handleGetProfile={this.handleGetProfile}\n            />\n            :\n              <Redirect to='/inventory-page' />\n          } />\n          \n          <Route exact path='/rooms-page' render={() =>\n            this.state.user ?\n            <Rooms rooms={this.handleGetRooms}\n            handleGetRooms={this.handleGetRooms}\n            />\n            :\n              <Redirect to='/inventory-page' />\n          } />\n          <Route exact path='/create-inventory-page' render={() =>\n              this.state.user ?\n              <CreateInventory\n              handleCreateInventory={this.handleCreateInventory}             \n              />\n              :\n              <Redirect to='/inventory-Page' />\n          } />\n          <Route exact path='/inventory-page' render={() =>\n              this.state.user ?\n              <Inventory\n              handleGetInventory={this.handleGetInventory}             \n              />\n              :\n              <Redirect to='/profile-Page' />\n          } />\n        </Switch> \n      </div>\n    );\n  }\n}\n\nexport default App;","/home/carolsand/DevProjects/InventoryU/src/utils/roomService.js",["97"],"const BASE_URL = '/api/room/';\n\nexport default {\n  create,\n  getRooms,\n  deleteRoom,\n  addRoomToInventory,\n  addItemToRoom,\n  deleteItemFromRoom,\n  updateRoom\n};\n\nfunction create(room) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n}\n\nfunction getRooms() {\n  return fetch(BASE_URL).then(res => res.json());\n}\n\n// function getNewRoom() {\n//   return fetch(BASE_URL).then(res => res.json());\n// }\n\nfunction addRoomToInventory(room) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n  \n}\n\nfunction addItemToRoom(item) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(item)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n\n}\n\nfunction deleteItemFromRoom(item) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    };\n    return fetch(BASE_URL, options).then(res => res.json());\n  \n  }\n  \n\nfunction updateRoom(room) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL + \"update\", options).then(res => res.json());\n}\n\nfunction deleteRoom(room) {\n  const options = {\n    method: 'DELETE',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL + \"update\", options).then(res => res.json());\n}\n","/home/carolsand/DevProjects/InventoryU/src/utils/inventoryService.js",["98"],"const BASE_URL = '/api/inventory/';\n\nexport default {\n  create,\n  getInventory,\n  deleteInventory,\n  addRoomToInventory,\n  updateInventory,\n  deleteRoomFromInventory\n};\n\nfunction create(inventory) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(inventory)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n}\n\nfunction getInventory() {\n  return fetch(BASE_URL).then(res => res.json());\n}\n\n// function getNewRoom() {\n//   return fetch(BASE_URL).then(res => res.json());\n// }\n\nfunction addRoomToInventory(room) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n  \n}\n\nfunction deleteRoomFromInventory(room) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n\n}\n\nfunction updateInventory(inventory) {\n  const options = {\n    method: 'PATCH',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(inventory)\n  };\n  return fetch(BASE_URL + \"update\", options).then(res => res.json());\n}\n\nfunction deleteInventory(inventory) {\n  const options = {\n    method: 'DELETE',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(inventory)\n  };\n  return fetch(BASE_URL + \"update\", options).then(res => res.json());\n}\n","/home/carolsand/DevProjects/InventoryU/src/utils/userService.js",["99"],"import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\nfunction signup(user) {\n  console.log('This is the value of user in userService.signup()', user);\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    headers: new Headers({ 'Content-Type': 'application/json' }),\n    body: JSON.stringify(user)\n  })\n    .then(res => {\n      if (res.ok) return res.json();\n      // Probably a duplicate email\n      throw new Error('Email already taken!');\n    })\n    // Parameter destructuring!\n    .then(({ token }) => tokenService.setToken(token));\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({ 'Content-Type': 'application/json' }),\n    body: JSON.stringify(creds)\n  })\n    .then(res => {\n      // Valid login if we have a status of 2xx (res.ok)\n      if (res.ok) return res.json();\n      throw new Error('Bad Credentials!');\n    })\n    .then(({ token }) => tokenService.setToken(token));\n}\n\nexport default {\n  signup,\n  getUser,\n  logout,\n  login\n};","/home/carolsand/DevProjects/InventoryU/src/pages/SignupPage/SignupPage.jsx",[],"/home/carolsand/DevProjects/InventoryU/src/pages/InventoryPage/InventoryPage.jsx",[],"/home/carolsand/DevProjects/InventoryU/src/pages/LoginPage/LoginPage.jsx",[],"/home/carolsand/DevProjects/InventoryU/src/pages/ProfilePage/ProfilePage.jsx",[],"/home/carolsand/DevProjects/InventoryU/src/pages/HomePage/HomePage.jsx",["100"],"import React from 'react';\n// import Footer from '../Footer';\nimport { Navbar } from 'react-bulma-components';\nimport '../../components/Inventory/Inventory';\n//import './HomePage.css';\n\nconst HomePage = (props) => (\n  <div className= \"HomePage\">\n     <h2>Take Inventory Before Disaster Strikes </h2>\n           {props.user}\n           inventory={props.inventory}\n           room={props.room}\n           {props.profile} \n  </div>\n);\n\nexport default HomePage;","/home/carolsand/DevProjects/InventoryU/src/pages/CreateInventoryPage/CreateInventory.jsx",[],"/home/carolsand/DevProjects/InventoryU/src/components/NavBar/NavBar.jsx",[],"/home/carolsand/DevProjects/InventoryU/src/utils/tokenService.js",["101"],"\nfunction setToken(token) {\n    if (token) {\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  //Decodes the token, then extracts and returns the user object\n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  \n  function removeToken() {\n    localStorage.removeItem('token');\n  }\n  \n  export default {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };","/home/carolsand/DevProjects/InventoryU/src/components/SignupForm/SignupForm.jsx",[],"/home/carolsand/DevProjects/InventoryU/src/components/InventoryForm/InventoryForm.jsx",[],["102","103"],"/home/carolsand/DevProjects/InventoryU/src/components/Inventory/Inventory.jsx",["104"],"import React from 'react';\nimport { Navbar } from 'react-bulma-components';\nimport './Inventory.css';\n\n\n// function Inventory(){\n//   return(\n//     <div> \n//       <Inventory room='Living Room' />\n//     </div>\n//   );\n// }\nconst Inventory = (props) => {\n    return (\n      <div>\n        <h2>Inventory Profile </h2>\n         {/*<Inventory desc={props.inventory} /> */}\n        {/*Inventory.map(invent => <li key={invent}>{invent}</li>)*/}\n        <ul>\n          {/*props.state.room*/}\n          {/*props.inventory.map(inventory =>\n           <button key={inventory}>{inventory}</button>\n          ) */}\n        </ul>\n        <h1>Your Inventory </h1> \n      </div>\n    );\n  }\n\nexport default Inventory;","/home/carolsand/DevProjects/InventoryU/src/components/Rooms/Rooms.jsx",["105"],"import React from 'react';\nimport './Rooms.css';\nimport { Navbar } from 'react-bulma-components';\n\nconst Rooms = (props) => {\n    return (\n      <div>\n        <h2>You Rooms Inventory </h2>\n        <h3> List of Rooms </h3>\n        <p> {props.room} {console.log(\"value of props --->\", props)} </p>\n      </div>  \n    );\n  }\n\nexport default Rooms;","/home/carolsand/DevProjects/InventoryU/src/components/Profiles/Profile.jsx",["106"],"import React from 'react';\nimport './Profile.css';\nimport { Navbar } from 'react-bulma-components';\nimport ProfilePage from '../../pages/ProfilePage/ProfilePage';\n\nconst Profile = (props) => {\n    return (\n    <div className='Profile'>\n       <Navbar />\n       <h1>User Profile\n           {props.user}</h1>\n    </div>\n    );\n}\n\nexport default Profile;",{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":9,"column":8,"nodeType":"113","messageId":"114","endLine":9,"endColumn":16},{"ruleId":"111","severity":1,"message":"115","line":10,"column":8,"nodeType":"113","messageId":"114","endLine":10,"endColumn":21},{"ruleId":"111","severity":1,"message":"116","line":15,"column":8,"nodeType":"113","messageId":"114","endLine":15,"endColumn":19},{"ruleId":"111","severity":1,"message":"117","line":18,"column":8,"nodeType":"113","messageId":"114","endLine":18,"endColumn":12},{"ruleId":"111","severity":1,"message":"118","line":21,"column":7,"nodeType":"113","messageId":"114","endLine":21,"endColumn":11},{"ruleId":"111","severity":1,"message":"119","line":59,"column":11,"nodeType":"113","messageId":"114","endLine":59,"endColumn":15},{"ruleId":"120","severity":1,"message":"121","line":3,"column":1,"nodeType":"122","endLine":11,"endColumn":3},{"ruleId":"120","severity":1,"message":"121","line":3,"column":1,"nodeType":"122","endLine":10,"endColumn":3},{"ruleId":"120","severity":1,"message":"121","line":45,"column":1,"nodeType":"122","endLine":50,"endColumn":3},{"ruleId":"111","severity":1,"message":"123","line":3,"column":10,"nodeType":"113","messageId":"114","endLine":3,"endColumn":16},{"ruleId":"120","severity":1,"message":"121","line":34,"column":3,"nodeType":"122","endLine":39,"endColumn":5},{"ruleId":"107","replacedBy":"124"},{"ruleId":"109","replacedBy":"125"},{"ruleId":"111","severity":1,"message":"123","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":16},{"ruleId":"111","severity":1,"message":"123","line":3,"column":10,"nodeType":"113","messageId":"114","endLine":3,"endColumn":16},{"ruleId":"111","severity":1,"message":"116","line":4,"column":8,"nodeType":"113","messageId":"114","endLine":4,"endColumn":19},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'HomePage' is defined but never used.","Identifier","unusedVar","'InventoryPage' is defined but never used.","'ProfilePage' is defined but never used.","'Room' is defined but never used.","'user' is assigned a value but never used.","'room' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Navbar' is defined but never used.",["126"],["127"],"no-global-assign","no-unsafe-negation"]