{"version":3,"sources":["utils/tokenService.js","utils/userService.js","utils/roomService.js","utils/inventoryService.js","components/Inventory/Inventory.jsx","components/InventoryForm/InventoryForm.jsx","pages/CreateInventoryPage/CreateInventory.jsx","components/SignupForm/SignupForm.jsx","pages/SignupPage/SignupPage.jsx","pages/LoginPage/LoginPage.jsx","components/NavBar/NavBar.jsx","components/Profiles/Profile.jsx","components/Rooms/Rooms.jsx","pages/App/App.js","serviceWorker.js","index.js"],"names":["getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","setToken","setItem","removeToken","getUserFromToken","user","BASE_URL","signup","console","log","fetch","method","headers","Headers","body","stringify","then","res","ok","json","Error","tokenService","getUser","logout","login","creds","create","room","options","getRooms","deleteRoom","addRoomToInventory","addItemToRoom","item","deleteItemFromRoom","updateRoom","inventory","getInventory","deleteInventory","updateInventory","deleteRoomFromInventory","Inventory","props","InventoryForm","handleChange","e","setState","target","name","value","handleSubmit","a","preventDefault","inventoryService","state","description","rooms","city","this","email","password","passwordConf","className","onSubmit","type","placeholder","onChange","onClick","to","Component","CreateInventory","SignupForm","updateMessage","userService","handleSignupOrLogin","history","push","message","disabled","isFormInvalid","SignupPage","msg","LoginPage","pw","alert","NavBar","nav","handleLogout","Profile","Rooms","App","handleCreateInventory","handleCreateRoom","roomService","handleGetRooms","handleGetInventory","show","exact","path","render","handleGetProfile","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"+eASE,SAASA,IACP,IAAIC,EAAQC,aAAaC,QAAQ,SAC7BF,IAEcG,KAAKC,MAAMC,KAAKL,EAAMM,MAAM,KAAK,KAErCC,IAAMC,KAAKC,MAAQ,MAC7BR,aAAaS,WAAW,SACxBV,EAAQ,OAGZ,OAAOA,EAaM,OACbW,SAjCJ,SAAkBX,GACVA,EACFC,aAAaW,QAAQ,QAASZ,GAE9BC,aAAaS,WAAW,UA8B1BX,WACAc,YAPF,WACEZ,aAAaS,WAAW,UAOxBI,iBAbF,WACE,IAAMd,EAAQD,IACd,OAAOC,EAAQG,KAAKC,MAAMC,KAAKL,EAAMM,MAAM,KAAK,KAAKS,KAAO,OCxB1DC,EAAW,cA0CF,OACbC,OAzCF,SAAgBF,GAEd,OADAG,QAAQC,IAAI,oDAAqDJ,GAC1DK,MAAMJ,EAAW,SAAU,CAChCK,OAAQ,OACRC,QAAS,IAAIC,QAAQ,CAAE,eAAgB,qBACvCC,KAAMrB,KAAKsB,UAAUV,KAEpBW,MAAK,SAAAC,GACJ,GAAIA,EAAIC,GAAI,OAAOD,EAAIE,OAEvB,MAAM,IAAIC,MAAM,2BAGjBJ,MAAK,gBAAG1B,EAAH,EAAGA,MAAH,OAAe+B,EAAapB,SAASX,OA6B7CgC,QAxBF,WACE,OAAOD,EAAajB,oBAwBpBmB,OArBF,WACEF,EAAalB,eAqBbqB,MAlBF,SAAeC,GACb,OAAOf,MAAMJ,EAAW,QAAS,CAC/BK,OAAQ,OACRC,QAAS,IAAIC,QAAQ,CAAE,eAAgB,qBACvCC,KAAMrB,KAAKsB,UAAUU,KAEpBT,MAAK,SAAAC,GAEJ,GAAIA,EAAIC,GAAI,OAAOD,EAAIE,OACvB,MAAM,IAAIC,MAAM,uBAEjBJ,MAAK,gBAAG1B,EAAH,EAAGA,MAAH,OAAe+B,EAAapB,SAASX,QCzCzCgB,EAAW,aAEF,GACboB,OASF,SAAgBC,GACd,IAAMC,EAAU,CACdjB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBE,KAAMrB,KAAKsB,UAAUY,IAEvB,OAAOjB,MAAMJ,EAAUsB,GAASZ,MAAK,SAAAC,GAAG,OAAIA,EAAIE,WAhBhDU,SAmBF,WACE,OAAOnB,MAAMJ,GAAUU,MAAK,SAAAC,GAAG,OAAIA,EAAIE,WAnBvCW,WA0EF,SAAoBH,GAClB,IAAMC,EAAU,CACdjB,OAAQ,SACRC,QAAS,CACP,eAAgB,oBAElBE,KAAMrB,KAAKsB,UAAUY,IAEvB,OAAOjB,MAAMJ,mBAAqBsB,GAASZ,MAAK,SAAAC,GAAG,OAAIA,EAAIE,WAjF3DY,mBAyBF,SAA4BJ,GAC1B,IAAMC,EAAU,CACdjB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBE,KAAMrB,KAAKsB,UAAUY,IAEvB,OAAOjB,MAAMJ,EAAUsB,GAASZ,MAAK,SAAAC,GAAG,OAAIA,EAAIE,WAhChDa,cAoCF,SAAuBC,GACrB,IAAML,EAAU,CACdjB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBE,KAAMrB,KAAKsB,UAAUkB,IAEvB,OAAOvB,MAAMJ,EAAUsB,GAASZ,MAAK,SAAAC,GAAG,OAAIA,EAAIE,WA3ChDe,mBA+CF,SAA4BD,GACxB,IAAML,EAAU,CACdjB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBE,KAAMrB,KAAKsB,UAAUkB,IAEvB,OAAOvB,MAAMJ,EAAUsB,GAASZ,MAAK,SAAAC,GAAG,OAAIA,EAAIE,WAtDlDgB,WA2DF,SAAoBR,GAClB,IAAMC,EAAU,CACdjB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBE,KAAMrB,KAAKsB,UAAUY,IAEvB,OAAOjB,MAAMJ,mBAAqBsB,GAASZ,MAAK,SAAAC,GAAG,OAAIA,EAAIE,YC5E7D,IAAMb,EAAW,kBAEF,GACboB,OAQF,SAAgBU,GACd,IAAMR,EAAU,CACdjB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBE,KAAMrB,KAAKsB,UAAUqB,IAEvB,OAAO1B,MAAMJ,EAAUsB,GAASZ,MAAK,SAAAC,GAAG,OAAIA,EAAIE,WAfhDkB,aAkBF,WACE,OAAO3B,MAAMJ,GAAUU,MAAK,SAAAC,GAAG,OAAIA,EAAIE,WAlBvCmB,gBA4DF,SAAyBF,GACvB,IAAMR,EAAU,CACdjB,OAAQ,SACRC,QAAS,CACP,eAAgB,oBAElBE,KAAMrB,KAAKsB,UAAUqB,IAEvB,OAAO1B,MAAMJ,wBAAqBsB,GAASZ,MAAK,SAAAC,GAAG,OAAIA,EAAIE,WAnE3DY,mBAwBF,SAA4BJ,GAC1B,IAAMC,EAAU,CACdjB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBE,KAAMrB,KAAKsB,UAAUY,IAEvB,OAAOjB,MAAMJ,EAAUsB,GAASZ,MAAK,SAAAC,GAAG,OAAIA,EAAIE,WA/BhDoB,gBA+CF,SAAyBH,GACvB,IAAMR,EAAU,CACdjB,OAAQ,QACRC,QAAS,CACP,eAAgB,oBAElBE,KAAMrB,KAAKsB,UAAUqB,IAEvB,OAAO1B,MAAMJ,wBAAqBsB,GAASZ,MAAK,SAAAC,GAAG,OAAIA,EAAIE,WAtD3DqB,wBAkCF,SAAiCb,GAC/B,IAAMC,EAAU,CACdjB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBE,KAAMrB,KAAKsB,UAAUY,IAEvB,OAAOjB,MAAMJ,EAAUsB,GAASZ,MAAK,SAAAC,GAAG,OAAIA,EAAIE,Y,YCrBnCsB,G,MAjBG,SAACC,GACf,OACE,6BACE,kDAGA,6BAMA,kD,uBCsFOC,G,wDAvGb,WAAYD,GAAQ,IAAD,8BACjB,cAAMA,IAmBRE,aAAe,SAACC,GAEd,EAAKC,SAAL,eAEGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,SAxBX,EA4BnBC,aA5BmB,uCA4BJ,WAAOL,GAAP,SAAAM,EAAA,6DACbN,EAAEO,iBADW,kBAGLC,EAAiB3B,OAAO,EAAK4B,OAHxB,sDAKX9C,QAAQC,IAAI,qBALD,wDA5BI,sDAEjB,EAAK6C,MAAQ,CACTN,KAAM,GACNO,YAAa,GACbC,MAAO,GACPC,KAAM,GACNH,MAAM,IAPO,E,4DAuCjB,QAASI,KAAKJ,MAAMN,MAAQU,KAAKJ,MAAMK,OAASD,KAAKJ,MAAMM,WAAaF,KAAKJ,MAAMO,gB,+BAInF,OACE,yBAAKC,UAAU,aACb,4BAAQA,UAAU,UAAlB,qBADF,eAGI,0BAAMA,UAAU,cAAcC,SAAUL,KAAKd,cAC3C,yBAAKkB,UAAU,eACb,yBAAKA,UAAU,aACb,2BAAOE,KAAK,OAAOF,UAAU,eAAeG,YAAY,OAAOhB,MAAOS,KAAKJ,MAAMN,KAAMA,KAAK,OAAOkB,SAAUR,KAAKd,iBAHxH,eAOE,yBAAKkB,UAAU,cACb,yBAAKA,UAAU,aACb,2BAAOE,KAAK,OAAOF,UAAU,eAAeG,YAAY,OAAOhB,MAAOS,KAAKJ,MAAMG,KAAMT,KAAK,OAAOkB,SAAUR,KAAKd,gBAFtH,gBAMA,yBAAKkB,UAAU,cACb,yBAAKA,UAAU,aACb,2BAAOE,KAAK,OAAOF,UAAU,eAAeG,YAAY,QAAQhB,MAAOS,KAAKJ,MAAMA,MAAON,KAAK,QAAQkB,SAAUR,KAAKd,gBAEvH,6BAJF,mBAME,kFAEA,uCACA,4BAAQI,KAAK,SACX,4BAAQC,MAAOS,KAAKJ,MAAME,QAC1B,4BAAQP,MAAOS,KAAKJ,MAAME,OAA1B,UACA,4BAAQP,MAAOS,KAAKJ,MAAME,OAA1B,WACA,4BAAQP,MAAOS,KAAKJ,MAAME,OAA1B,OACA,4BAAQP,MAAOS,KAAKJ,MAAME,OAA1B,iBACA,4BAAQP,MAAOS,KAAKJ,MAAME,OAA1B,SACA,4BAAQP,MAAOS,KAAKJ,MAAME,OAA1B,UACA,4BAAQP,MAAOS,KAAKJ,MAAME,OAA1B,UACA,4BAAQP,MAAOS,KAAKJ,MAAME,OAA1B,QACA,4BAAQP,MAAOS,KAAKJ,MAAME,OAA1B,YACA,4BAAQP,MAAOS,KAAKJ,MAAME,OAA1B,SACA,4BAAQP,MAAOS,KAAKJ,MAAME,OAA1B,QACA,4BAAQP,MAAOS,KAAKJ,MAAME,OAA1B,UACA,4BAAQP,MAAOS,KAAKJ,MAAME,OAA1B,SAvBJ,gBA4BA,yBAAKM,UAAU,cACb,yBAAKA,UAAU,wBAAf,eAEE,4BAAQE,KAAK,SAASF,UAAU,kBAAkBK,QAAST,KAAKR,cAAhE,YACA,6BACA,kBAAC,IAAD,CAAMkB,GAAG,KAAT,UACA,qC,GA/FYC,cCObC,G,MAPS,SAAC5B,GAAD,OACtB,yBAAKoB,UAAW,aACd,kBAAC,EAAD,SCoEWS,E,4MAtEbjB,MAAQ,CACNN,KAAM,GACNW,MAAO,GACPC,SAAU,GACVC,aAAc,I,EAGhBjB,aAAe,SAACC,GACd,EAAKH,MAAM8B,cAAc,IACzB,EAAK1B,SAAL,eAEGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAI9BC,a,uCAAe,WAAOL,GAAP,SAAAM,EAAA,6DACbN,EAAEO,iBADW,kBAGLqB,EAAYlE,OAAO,EAAK+C,OAHnB,OAKX,EAAKZ,MAAMgC,sBAEX,EAAKhC,MAAMiC,QAAQC,KAAK,KAPb,gDAUX,EAAKlC,MAAM8B,cAAc,KAAIK,SAVlB,yD,oHAeb,QAASnB,KAAKJ,MAAMN,MAAQU,KAAKJ,MAAMK,OAASD,KAAKJ,MAAMM,WAAaF,KAAKJ,MAAMO,gB,+BAInF,OACE,yBAAKC,UAAU,aACb,4BAAQA,UAAU,iBAAlB,WACA,0BAAMA,UAAU,kBAAkBC,SAAUL,KAAKR,cAC/C,yBAAKY,UAAU,cACb,yBAAKA,UAAU,aACb,2BAAOE,KAAK,OAAOF,UAAU,eAAeG,YAAY,OAAOhB,MAAOS,KAAKJ,MAAMN,KAAMA,KAAK,OAAOkB,SAAUR,KAAKd,iBAGtH,yBAAKkB,UAAU,cACb,yBAAKA,UAAU,aACb,2BAAOE,KAAK,QAAQF,UAAU,eAAeG,YAAY,QAAQhB,MAAOS,KAAKJ,MAAMK,MAAOX,KAAK,QAAQkB,SAAUR,KAAKd,iBAG1H,yBAAKkB,UAAU,cACb,yBAAKA,UAAU,aACb,2BAAOE,KAAK,WAAWF,UAAU,eAAeG,YAAY,WAAWhB,MAAOS,KAAKJ,MAAMM,SAAUZ,KAAK,WAAWkB,SAAUR,KAAKd,iBAGtI,yBAAKkB,UAAU,cACb,yBAAKA,UAAU,aACb,2BAAOE,KAAK,WAAWF,UAAU,eAAeG,YAAY,mBAAmBhB,MAAOS,KAAKJ,MAAMO,aAAcb,KAAK,eAAekB,SAAUR,KAAKd,iBAGtJ,yBAAKkB,UAAU,cACb,yBAAKA,UAAU,yBACb,4BAAQA,UAAU,kBAAkBgB,SAAUpB,KAAKqB,iBAAnD,WADF,WAEE,kBAAC,IAAD,CAAMX,GAAG,KAAT,kB,GA/DWC,aCqCVW,G,wDApBb,WAAYtC,GAAQ,IAAD,8BACjB,cAAMA,IAKR8B,cAAgB,SAACS,GACf,EAAKnC,SAAS,CAAE+B,QAASI,KALzB,EAAK3B,MAAQ,CAAEuB,QAAS,IACxBrE,QAAQC,IAAI,qCAAmCiC,GAH9B,E,qDAWjB,OACE,yBAAKoB,UAAU,cACb,kBAAC,EAAD,iBAAgBJ,KAAKhB,MAArB,CAA4B8B,cAAed,KAAKc,iBAChD,2BAAId,KAAKJ,MAAMuB,c,GAfER,cCwCVa,G,kNArDb5B,MAAQ,CACNK,MAAO,GACPwB,GAAI,I,EAGNvC,aAAe,SAACC,GACd,EAAKC,SAAL,eAEGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAI9BC,a,uCAAe,WAAOL,GAAP,SAAAM,EAAA,6DACbN,EAAEO,iBADW,kBAGLqB,EAAYjD,MAAM,EAAK8B,OAHlB,OAKX,EAAKZ,MAAMgC,sBAEX,EAAKhC,MAAMiC,QAAQC,KAAK,KAPb,gDAUXQ,MAAM,wBAVK,yD,6GAeb,OACE,yBAAKtB,UAAU,aACb,4BAAQA,UAAU,iBAAlB,UACA,0BAAMA,UAAU,kBAAkBC,SAAUL,KAAKR,cAC/C,yBAAKY,UAAU,cACb,yBAAKA,UAAU,aACb,2BAAOE,KAAK,QAAQF,UAAU,eAAeG,YAAY,QAAQhB,MAAOS,KAAKJ,MAAMK,MAAOX,KAAK,QAAQkB,SAAUR,KAAKd,iBAG1H,yBAAKkB,UAAU,cACb,yBAAKA,UAAU,aACb,2BAAOE,KAAK,WAAWF,UAAU,eAAeG,YAAY,WAAWhB,MAAOS,KAAKJ,MAAM6B,GAAInC,KAAK,KAAKkB,SAAUR,KAAKd,iBAG1H,yBAAKkB,UAAU,cACb,yBAAKA,UAAU,yBACb,4BAAQA,UAAU,mBAAlB,UADF,eAEE,kBAAC,IAAD,CAAMM,GAAG,KAAT,kB,GA9CUC,cCkCTgB,G,MAnCA,SAAC3C,GACZ,IAAI4C,EAAM5C,EAAMrC,KAChB,yBAAKyD,UAAU,UACX,kBAAC,IAAD,CAAMM,GAAG,aAAaN,UAAU,YAAhC,QADJ,yCAII,kBAAC,IAAD,CAAMM,GAAG,yBAAyBN,UAAU,YAA5C,qBAJJ,yCAOI,kBAAC,IAAD,CAAMM,GAAG,aAAaN,UAAU,YAAhC,SAPJ,yCAUI,kBAAC,IAAD,CAAMM,GAAG,kBAAkBN,UAAU,YAAYpB,EAAMrC,KAAK2C,KAA5D,gBAVJ,yCAaI,kBAAC,IAAD,CAAMoB,GAAG,gBAAgBN,UAAU,YAAYpB,EAAMrC,KAAK2C,KAA1D,cAbJ,yCAgBI,kBAAC,IAAD,CAAMoB,GAAG,GAAGN,UAAU,WAAWK,QAASzB,EAAM6C,cAAhD,WAhBJ,yBAoBA,6BACI,kBAAC,IAAD,CAAMnB,GAAG,SAASN,UAAU,eAA5B,UADJ,oBAGI,kBAAC,IAAD,CAAMM,GAAG,UAAUN,UAAU,eAA7B,YAGJ,OACI,yBAAKA,UAAU,UACVwB,KCnBEE,G,YAVC,SAAC9C,GACb,OACA,yBAAKoB,UAAU,WACZ,kBAAC,SAAD,MACA,2CACKpB,EAAMrC,SCIHoF,G,MAVD,SAAC/C,GACX,OACE,6BACE,oDACA,+CACA,+BAAKA,EAAMf,KAAX,IAAkBnB,QAAQC,IAAI,yBAAuBiC,GAArD,QCsIOgD,GA3HFjB,EAAYnD,U,kDAGvB,aAAe,IAAD,8BACZ,gBAkBFiE,aAAe,WACbd,EAAYlD,SACZ,EAAKuB,SAAS,CAAEzC,KAAM,QArBV,EAwBdqE,oBAAsB,WACpB,EAAK5B,SAAS,CAAEzC,KAAMoE,EAAYnD,aAzBtB,EA6BdqE,sBAAwB,WACtB,IAAMvD,EAAYiB,EAAiB3B,SACnClB,QAAQC,IAAI,qCAAmC2B,IA/BnC,EAkCdwD,iBAAmB,WACJ,EAAK9C,SAAS,CAACnB,KAAMkE,EAAYnE,WAC9ClB,QAAQC,IAAI,8DApCA,EAuCdqF,eAAiB,WACf,IAAMtC,EAAQqC,EAAYhE,WAC1B,EAAKiB,SAAS,CAACnB,KAAMkE,EAAYhE,aACjCrB,QAAQC,IAAI,qDAAmD+C,IA1CnD,EA6CduC,mBAAqB,WACnB,IAAM3D,EAAYiB,EAAiBhB,eACnC7B,QAAQC,IAAI,2CAAyC2B,GACrD,EAAKU,SAAS,CAACzC,KAAMgD,EAAiB2C,KAAK5D,MA9C3C,EAAKkB,MAAQ,CAEXjD,KAAMoE,EAAYnD,UAClBK,KAAMkE,EAAYhE,WAClBO,UAAWiB,EAAiBhB,aAAaoC,EAAYnD,YAN3C,E,uLAWZd,QAAQC,IAAI,4B,SACKgE,EAAYnD,U,OAAzBjB,E,OAEJqD,KAAKZ,SAAS,CAACV,UAAWiB,EAAiBhB,aAAahC,K,qIAsChD,IAAD,OACP,OACE,yBAAKyD,UAAU,IACb,4BAAQA,UAAU,aAAlB,0DACE,kBAAC,EAAD,CACEzD,KAAMqD,KAAKJ,MAAMjD,KACjBkF,aAAc7B,KAAK6B,eAEtB,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,IAAIC,OAAQ,gBAAGxB,EAAH,EAAGA,QAAH,OAC5B,kBAAC,EAAD,CACEA,QAASA,EACToB,mBAAoB,EAAKA,mBACzB1F,KAAM,EAAKiB,aAIf,kBAAC,IAAD,CAAO2E,OAAK,EAACC,KAAK,UAAUC,OAAQ,gBAAGxB,EAAH,EAAGA,QAAH,OAClC,kBAAC,EAAD,CACEA,QAASA,EACTD,oBAAqB,EAAKA,yBAG9B,kBAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,SAASC,OAAQ,gBAAGxB,EAAH,EAAGA,QAAH,OACjC,kBAAC,EAAD,CACEA,QAASA,EACTD,oBAAqB,EAAKA,yBAG9B,kBAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,gBAAgBC,OAAQ,kBACxC,EAAK7C,MAAMjD,KACX,kBAAC,EAAD,CACE+F,iBAAkB,EAAKA,mBAGvB,kBAAC,IAAD,CAAUhC,GAAG,uBAGjB,kBAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,cAAcC,OAAQ,kBACtC,EAAK7C,MAAMjD,KACX,kBAAC,EAAD,CAAOmD,MAAO,EAAKsC,eACnBA,eAAgB,EAAKA,iBAGnB,kBAAC,IAAD,CAAU1B,GAAG,uBAEjB,kBAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,yBAAyBC,OAAQ,kBAC/C,EAAK7C,MAAMjD,KACX,kBAAC,EAAD,CACAsF,sBAAuB,EAAKA,wBAG5B,kBAAC,IAAD,CAAUvB,GAAG,uBAEjB,kBAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,kBAAkBC,OAAQ,kBACxC,EAAK7C,MAAMjD,KACX,kBAAC,EAAD,CACA0F,mBAAoB,EAAKA,qBAGzB,kBAAC,IAAD,CAAU3B,GAAG,2B,GAjHTC,cCVEgC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASP,OACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOA,OAAQ,gBAAExB,EAAF,EAAEA,QAAF,OAAe,kBAAC,EAAD,CAAKA,QAASA,QACrCgC,SAASC,eAAe,SDwHjC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/F,MAAK,SAAAgG,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3G,QAAQ2G,MAAMA,EAAMtC,c","file":"static/js/main.3978eba0.chunk.js","sourcesContent":["\nfunction setToken(token) {\n    if (token) {\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  //Decodes the token, then extracts and returns the user object\n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  \n  function removeToken() {\n    localStorage.removeItem('token');\n  }\n  \n  export default {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };","import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\nfunction signup(user) {\n  console.log('This is the value of user in userService.signup()', user);\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    headers: new Headers({ 'Content-Type': 'application/json' }),\n    body: JSON.stringify(user)\n  })\n    .then(res => {\n      if (res.ok) return res.json();\n      // Probably a duplicate email\n      throw new Error('Email already taken!');\n    })\n    // Parameter destructuring!\n    .then(({ token }) => tokenService.setToken(token));\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({ 'Content-Type': 'application/json' }),\n    body: JSON.stringify(creds)\n  })\n    .then(res => {\n      // Valid login if we have a status of 2xx (res.ok)\n      if (res.ok) return res.json();\n      throw new Error('Bad Credentials!');\n    })\n    .then(({ token }) => tokenService.setToken(token));\n}\n\nexport default {\n  signup,\n  getUser,\n  logout,\n  login\n};","const BASE_URL = '/api/room/';\n\nexport default {\n  create,\n  getRooms,\n  deleteRoom,\n  addRoomToInventory,\n  addItemToRoom,\n  deleteItemFromRoom,\n  updateRoom\n};\n\nfunction create(room) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n}\n\nfunction getRooms() {\n  return fetch(BASE_URL).then(res => res.json());\n}\n\n// function getNewRoom() {\n//   return fetch(BASE_URL).then(res => res.json());\n// }\n\nfunction addRoomToInventory(room) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n  \n}\n\nfunction addItemToRoom(item) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(item)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n\n}\n\nfunction deleteItemFromRoom(item) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    };\n    return fetch(BASE_URL, options).then(res => res.json());\n  \n  }\n  \n\nfunction updateRoom(room) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL + \"update\", options).then(res => res.json());\n}\n\nfunction deleteRoom(room) {\n  const options = {\n    method: 'DELETE',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL + \"update\", options).then(res => res.json());\n}\n","const BASE_URL = '/api/inventory/';\n\nexport default {\n  create,\n  getInventory,\n  deleteInventory,\n  addRoomToInventory,\n  updateInventory,\n  deleteRoomFromInventory\n};\n\nfunction create(inventory) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(inventory)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n}\n\nfunction getInventory() {\n  return fetch(BASE_URL).then(res => res.json());\n}\n\n// function getNewRoom() {\n//   return fetch(BASE_URL).then(res => res.json());\n// }\n\nfunction addRoomToInventory(room) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n  \n}\n\nfunction deleteRoomFromInventory(room) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n\n}\n\nfunction updateInventory(inventory) {\n  const options = {\n    method: 'PATCH',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(inventory)\n  };\n  return fetch(BASE_URL + \"update\", options).then(res => res.json());\n}\n\nfunction deleteInventory(inventory) {\n  const options = {\n    method: 'DELETE',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(inventory)\n  };\n  return fetch(BASE_URL + \"update\", options).then(res => res.json());\n}\n","import React from 'react';\nimport { Navbar } from 'react-bulma-components';\nimport './Inventory.css';\n\n\n// function Inventory(){\n//   return(\n//     <div> \n//       <Inventory room='Living Room' />\n//     </div>\n//   );\n// }\nconst Inventory = (props) => {\n    return (\n      <div>\n        <h2>Inventory Profile </h2>\n         {/*<Inventory desc={props.inventory} /> */}\n        {/*Inventory.map(invent => <li key={invent}>{invent}</li>)*/}\n        <ul>\n          {/*props.state.room*/}\n          {/*props.inventory.map(inventory =>\n           <button key={inventory}>{inventory}</button>\n          ) */}\n        </ul>\n        <h1>Your Inventory </h1> \n      </div>\n    );\n  }\n\nexport default Inventory;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport inventoryService from '../../utils/inventoryService';\nimport './InventoryForm.css';\n\n\nclass InventoryForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        name: '',\n        description: '',\n        rooms: '', \n        city: '',\n        state:'',\n      };\n  }\n  \n  // handleUpdate = async (e) => {\n  //   e.preventDefault();\n  //   try {\n  //     await experienceService.addJobToExperience(this.state);\n  //   }catch (err){\n  //     console.log('Invalid user data');\n  //   }\n  // }\n\n  handleChange = (e) => {\n    // this.props.updateMessage('');\n    this.setState({\n      // Using ES2015 Computed Property Names\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await inventoryService.create(this.state);\n    } catch (err) { \n      console.log('Invalid user data');\n      // this.updateMessage(err.message);\n    }\n  };\n\n  isFormInvalid() {\n    return !(this.state.name && this.state.email && this.state.password === this.state.passwordConf);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"header\">Create Your Rooms</header>\n        &nbsp;&nbsp;&nbsp;\n          <form className=\"form-inline\" onSubmit={this.handleChange} >\n            <div className=\"form-inline\">\n              <div className=\"col-sm-12\">\n                <input type=\"text\" className=\"form-control\" placeholder=\"Name\" value={this.state.name} name=\"name\" onChange={this.handleChange} />\n              </div>\n            </div>\n          &nbsp;&nbsp;&nbsp;\n            <div className=\"form-group\">\n              <div className=\"col-sm-12\">\n                <input type=\"text\" className=\"form-control\" placeholder=\"city\" value={this.state.city} name=\"city\" onChange={this.handleChange} />\n              </div>\n              &nbsp;&nbsp;&nbsp;\n            </div>\n            <div className=\"form-group\">\n              <div className=\"col-sm-12\">\n                <input type=\"text\" className=\"form-control\" placeholder=\"state\" value={this.state.state} name=\"state\" onChange={this.handleChange} />\n              </div>\n              <hr />\n              &nbsp;&nbsp;&nbsp;&nbsp;\n              <label>\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n              <span>Rooms</span>\n              <select name='rooms'>\n                <option value={this.state.rooms}></option>\n                <option value={this.state.rooms}>Living</option>\n                <option value={this.state.rooms}>Kitchen</option>\n                <option value={this.state.rooms}>Bed</option>\n                <option value={this.state.rooms}>Entertainment</option>\n                <option value={this.state.rooms}>Guest</option>\n                <option value={this.state.rooms}>Office</option>\n                <option value={this.state.rooms}>Studio</option>\n                <option value={this.state.rooms}>Bath</option>\n                <option value={this.state.rooms}>Basement</option>\n                <option value={this.state.rooms}>Study</option>\n                <option value={this.state.rooms}>Play</option>\n                <option value={this.state.rooms}>Cabana</option>\n                <option value={this.state.rooms}>Gym</option>\n              </select>\n            </label>\n            &nbsp;&nbsp;&nbsp;\n            </div>\n            <div className=\"form-group\">\n              <div className=\"col-sm-9 text-center\">\n              &nbsp;&nbsp;&nbsp;\n                <button type=\"submit\" className=\"btn btn-default\" onClick={this.handleSubmit}>Add Room</button>\n                <hr />\n                <Link to='/'>Cancel</Link>\n                <hr />\n              </div>\n            </div>\n          </form>\n      </div>\n    );\n  }\n}\n\nexport default InventoryForm;\n","import React from 'react';\nimport InventoryForm from '../../components/InventoryForm/InventoryForm'\nimport './CreateInventory.css';\n\n// I want to create a room with contents on this page\n\nconst CreateInventory = (props) => (\n  <div className= \"container\">\n    <InventoryForm\n    />\n  </div>\n);\n\nexport default CreateInventory;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport userService from '../../utils/userService';\n\nclass SignupForm extends Component {\n\n  state = {\n    name: '',\n    email: '',\n    password: '',\n    passwordConf: ''\n  };\n\n  handleChange = (e) => {\n    this.props.updateMessage('');\n    this.setState({\n      // Using ES2015 Computed Property Names\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await userService.signup(this.state);\n      // Let <App> know a user has signed up!\n      this.props.handleSignupOrLogin();\n      // Successfully signed up - show GamePage\n      this.props.history.push('/');\n    } catch (err) {\n      // Invalid user data (probably duplicate email)\n      this.props.updateMessage(err.message);\n    }\n  }\n\n  isFormInvalid() {\n    return !(this.state.name && this.state.email && this.state.password === this.state.passwordConf);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"header-footer\">Sign Up</header>\n        <form className=\"form-horizontal\" onSubmit={this.handleSubmit} >\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"text\" className=\"form-control\" placeholder=\"Name\" value={this.state.name} name=\"name\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"email\" className=\"form-control\" placeholder=\"Email\" value={this.state.email} name=\"email\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"password\" className=\"form-control\" placeholder=\"Password\" value={this.state.password} name=\"password\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"password\" className=\"form-control\" placeholder=\"Confirm Password\" value={this.state.passwordConf} name=\"passwordConf\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12 text-center\">\n              <button className=\"btn btn-default\" disabled={this.isFormInvalid()}>Sign Up</button>&nbsp;&nbsp;\n              <Link to='/'>Cancel</Link>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SignupForm;\n","import React, { Component } from 'react';\n// import React, { useState, Component } from 'react';\nimport SignupForm from '../../components/SignupForm/SignupForm';\nimport './SignupPage.css';\n\n/* Refactored to use declarative function instead of class  */\n\n// function SignupPage(props) {\n//   const [message, setMessage] = useState('');\n//   console.log(\"Hey the signup page\");\n \n//   return (\n//     <div className='SignupPage'>\n//       <SignupForm {...props} updateMessage={setMessage} />\n//       <p>{console.log(\"In the return section --->\")}</p>\n//       <p>{message}</p>\n//     </div>\n//   );\n// };  \n\nclass SignupPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { message: '' }\n    console.log(\"In the constructor section --->\", props);\n  }\n\n  updateMessage = (msg) => {\n    this.setState({ message: msg });\n  }\n\n  render() {\n    return (\n      <div className='SignupPage'>\n        <SignupForm {...this.props} updateMessage={this.updateMessage} />\n        <p>{this.state.message}</p>\n      </div>\n    );\n  }\n}\n\nexport default SignupPage;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './LoginPage.css';\nimport userService from '../../utils/userService';\n\nclass LoginPage extends Component {\n\n  state = {\n    email: '',\n    pw: ''\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      // Using ES2015 Computed Property Names\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await userService.login(this.state);\n      // Let <App> know a user has signed up!\n      this.props.handleSignupOrLogin();\n      // Successfully signed up - show GamePage\n      this.props.history.push('/');\n    } catch (err) {\n      // Use a modal or toast in your apps instead of alert\n      alert('Invalid Credentials!');\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"LoginPage\">\n        <header className=\"header-footer\">Log In</header>\n        <form className=\"form-horizontal\" onSubmit={this.handleSubmit} >\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"email\" className=\"form-control\" placeholder=\"Email\" value={this.state.email} name=\"email\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"password\" className=\"form-control\" placeholder=\"Password\" value={this.state.pw} name=\"pw\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12 text-center\">\n              <button className=\"btn btn-default\">Log In</button>&nbsp;&nbsp;&nbsp;\n              <Link to='/'>Cancel</Link>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './NavBar.css';\n\nconst NavBar = (props) => {\n    let nav = props.user ?\n    <div className='navbar'>\n        <Link to='/home-page' className='nav-link'>Home</Link> \n        &nbsp;&nbsp;|||&nbsp;&nbsp;&nbsp;|||&nbsp;&nbsp;&nbsp;\n        \n        <Link to='/create-inventory-page' className='nav-link'>Create Your Rooms</Link> \n        &nbsp;&nbsp;|||&nbsp;&nbsp;&nbsp;|||&nbsp;&nbsp;&nbsp;\n        \n        <Link to='rooms-page' className='nav-link'>Rooms</Link> \n        &nbsp;&nbsp;|||&nbsp;&nbsp;&nbsp;|||&nbsp;&nbsp;&nbsp;\n        \n        <Link to='/inventory-page' className='nav-link'>{props.user.name}'s Inventory</Link> \n        &nbsp;&nbsp;|||&nbsp;&nbsp;&nbsp;|||&nbsp;&nbsp;&nbsp;\n        \n        <Link to='/profile-page' className='nav-link'>{props.user.name}'s Profile</Link> \n        &nbsp;&nbsp;|||&nbsp;&nbsp;&nbsp;|||&nbsp;&nbsp;&nbsp;\n        \n        <Link to='' className='nav-link' onClick={props.handleLogout}>LOG OUT</Link>\n         &nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\n    </div>\n    :\n    <div>\n        <Link to='/login' className='NavBar-link'>LOG IN</Link>\n        &nbsp;&nbsp;|&nbsp;&nbsp;\n        <Link to='/signup' className='NavBar-link'>SIGN UP</Link>\n    </div>;\n\n    return(\n        <div className='NavBar'>\n            {nav}\n        </div>\n    );\n};\n\nexport default NavBar;","import React from 'react';\nimport './Profile.css';\nimport { Navbar } from 'react-bulma-components';\nimport ProfilePage from '../../pages/ProfilePage/ProfilePage';\n\nconst Profile = (props) => {\n    return (\n    <div className='Profile'>\n       <Navbar />\n       <h1>User Profile\n           {props.user}</h1>\n    </div>\n    );\n}\n\nexport default Profile;","import React from 'react';\nimport './Rooms.css';\nimport { Navbar } from 'react-bulma-components';\n\nconst Rooms = (props) => {\n    return (\n      <div>\n        <h2>You Rooms Inventory </h2>\n        <h3> List of Rooms </h3>\n        <p> {props.room} {console.log(\"value of props --->\", props)} </p>\n      </div>  \n    );\n  }\n\nexport default Rooms;","import React, {Component} from 'react';\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport './App.css';\n\n/* The following imports are named exports from inventoryu */\nimport userService from '../../utils/userService';\nimport roomService from '../../utils/roomService';\nimport inventoryService from '../../utils/inventoryService';\nimport HomePage from '../HomePage/HomePage';\nimport InventoryPage from '../InventoryPage/InventoryPage';\nimport CreateInventory from '../CreateInventoryPage/CreateInventory';\nimport SignupPage from '../SignupPage/SignupPage';\nimport LoginPage from '../LoginPage/LoginPage';\nimport NavBar from '../../components/NavBar/NavBar';\nimport ProfilePage from '../ProfilePage/ProfilePage';\nimport Inventory from '../../components/Inventory/Inventory.jsx';\nimport Profile from '../../components/Profiles/Profile.jsx';\nimport Room from '../../components/Rooms/Rooms.jsx';\nimport Rooms from '../../components/Rooms/Rooms.jsx';\n\nconst user = userService.getUser();\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      // Initialize user if there's a token, otherwise null\n      user: userService.getUser(),\n      room: roomService.getRooms(),\n      inventory: inventoryService.getInventory(userService.getUser())\n    };\n  }\n\n  async componentDidMount () {\n    console.log(\"componentDidMount--->\");\n    let user = await userService.getUser();\n    // const inventory = await inventoryService.getInventory();\n    this.setState({inventory: inventoryService.getInventory(user)});\n  }\n\n\n  \n  handleLogout = () => {\n    userService.logout();\n    this.setState({ user: null });\n  }\n\n  handleSignupOrLogin = () => {\n    this.setState({ user: userService.getUser() });\n    //console.log(\"Logged in usr---->\", user);\n  }\n\n  handleCreateInventory = () => {\n    const inventory = inventoryService.create();\n    console.log(\"Logged in user's Inventory---->\", inventory);\n  }\n\n  handleCreateRoom = () => {\n    const room = this.setState({room: roomService.create()});\n    console.log(\"This is the handleCreateRoom Function in App.js ----->\");\n  }\n\n  handleGetRooms = () => {\n    const rooms = roomService.getRooms();\n    this.setState({room: roomService.getRooms()});\n    console.log(\"Getting the rooms created for this profile --->\", rooms);\n  }\n\n  handleGetInventory = () => {\n    const inventory = inventoryService.getInventory(); \n    console.log(\"Inventory in database -------------->\", inventory);\n    this.setState({user: inventoryService.show(inventory)})\n  }\n\n  \n  render() {\n    return (\n      <div className=\"\"> \n        <header className='container'> &nbsp;&nbsp;&nbsp; Take Inventory Before Disaster Strikes  </header>\n          <NavBar \n            user={this.state.user}\n            handleLogout={this.handleLogout}\n            />\n         <Switch>\n          <Route exact path='/' render={({ history }) =>\n            <Inventory\n              history={history}\n              handleGetInventory={this.handleGetInventory}\n              user={this.getUser}\n            />\n            \n          } />\n          <Route exact path='/signup' render={({ history }) =>\n            <SignupPage\n              history={history}\n              handleSignupOrLogin={this.handleSignupOrLogin}\n            />\n          } />\n          <Route exact path='/login' render={({ history }) =>\n            <LoginPage\n              history={history}\n              handleSignupOrLogin={this.handleSignupOrLogin}\n            />\n          } />\n          <Route exact path='/profile-page' render={() =>\n            this.state.user ?\n            <Profile\n              handleGetProfile={this.handleGetProfile}\n            />\n            :\n              <Redirect to='/inventory-page' />\n          } />\n          \n          <Route exact path='/rooms-page' render={() =>\n            this.state.user ?\n            <Rooms rooms={this.handleGetRooms}\n            handleGetRooms={this.handleGetRooms}\n            />\n            :\n              <Redirect to='/inventory-page' />\n          } />\n          <Route exact path='/create-inventory-page' render={() =>\n              this.state.user ?\n              <CreateInventory\n              handleCreateInventory={this.handleCreateInventory}             \n              />\n              :\n              <Redirect to='/inventory-Page' />\n          } />\n          <Route exact path='/inventory-page' render={() =>\n              this.state.user ?\n              <Inventory\n              handleGetInventory={this.handleGetInventory}             \n              />\n              :\n              <Redirect to='/profile-Page' />\n          } />\n        </Switch> \n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\n\nReactDOM.render(\n    <Router>\n        <Route render={({history}) => <App history={history} />} />\n    </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();"],"sourceRoot":""}