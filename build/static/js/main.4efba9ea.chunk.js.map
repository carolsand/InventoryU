{"version":3,"sources":["utils/tokenService.js","utils/userService.js","utils/roomService.js","utils/inventoryService.js","pages/HomePage/HomePage.jsx","pages/InventoryPage/InventoryPage.jsx","components/InventoryForm/InventoryForm.jsx","pages/CreateInventoryPage/CreateInventory.jsx","components/SignupForm/SignupForm.jsx","pages/SignupPage/SignupPage.jsx","pages/LoginPage/LoginPage.jsx","components/NavBar/NavBar.jsx","pages/ProfilePage/ProfilePage.jsx","pages/App/App.js","serviceWorker.js","index.js"],"names":["getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","setToken","setItem","removeToken","getUserFromToken","user","BASE_URL","signup","console","log","fetch","method","headers","Headers","body","stringify","then","res","ok","json","Error","tokenService","getUser","logout","login","creds","create","room","options","getRooms","deleteRoom","addRoomToInventory","addItemToRoom","item","deleteItemFromRoom","updateRoom","inventory","getInventory","deleteInventory","updateInventory","deleteRoomFromInventory","HomePage","props","className","profile","InventoryPage","InventoryForm","handleChange","e","setState","target","name","value","handleSubmit","a","preventDefault","inventoryService","state","description","rooms","city","this","email","password","passwordConf","onSubmit","type","placeholder","onChange","onClick","to","Component","CreateInventory","SignupForm","updateMessage","userService","handleSignupOrLogin","history","push","message","disabled","isFormInvalid","SignupPage","msg","LoginPage","pw","alert","NavBar","nav","handleLogout","ProfilePage","App","handleCreateInventory","handleCreateRoom","roomService","handleGetInventory","show","exact","path","render","handleGetProfile","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"gbASE,SAASA,IACP,IAAIC,EAAQC,aAAaC,QAAQ,SAC7BF,IAEcG,KAAKC,MAAMC,KAAKL,EAAMM,MAAM,KAAK,KAErCC,IAAMC,KAAKC,MAAQ,MAC7BR,aAAaS,WAAW,SACxBV,EAAQ,OAGZ,OAAOA,EAaM,OACbW,SAjCJ,SAAkBX,GACVA,EACFC,aAAaW,QAAQ,QAASZ,GAE9BC,aAAaS,WAAW,UA8B1BX,WACAc,YAPF,WACEZ,aAAaS,WAAW,UAOxBI,iBAbF,WACE,IAAMd,EAAQD,IACd,OAAOC,EAAQG,KAAKC,MAAMC,KAAKL,EAAMM,MAAM,KAAK,KAAKS,KAAO,OCxB1DC,EAAW,cA0CF,OACbC,OAzCF,SAAgBF,GAEd,OADAG,QAAQC,IAAI,oDAAqDJ,GAC1DK,MAAMJ,EAAW,SAAU,CAChCK,OAAQ,OACRC,QAAS,IAAIC,QAAQ,CAAE,eAAgB,qBACvCC,KAAMrB,KAAKsB,UAAUV,KAEpBW,MAAK,SAAAC,GACJ,GAAIA,EAAIC,GAAI,OAAOD,EAAIE,OAEvB,MAAM,IAAIC,MAAM,2BAGjBJ,MAAK,gBAAG1B,EAAH,EAAGA,MAAH,OAAe+B,EAAapB,SAASX,OA6B7CgC,QAxBF,WACE,OAAOD,EAAajB,oBAwBpBmB,OArBF,WACEF,EAAalB,eAqBbqB,MAlBF,SAAeC,GACb,OAAOf,MAAMJ,EAAW,QAAS,CAC/BK,OAAQ,OACRC,QAAS,IAAIC,QAAQ,CAAE,eAAgB,qBACvCC,KAAMrB,KAAKsB,UAAUU,KAEpBT,MAAK,SAAAC,GAEJ,GAAIA,EAAIC,GAAI,OAAOD,EAAIE,OACvB,MAAM,IAAIC,MAAM,uBAEjBJ,MAAK,gBAAG1B,EAAH,EAAGA,MAAH,OAAe+B,EAAapB,SAASX,QCzCzCgB,EAAW,aAEF,GACboB,OASF,SAAgBC,GACd,IAAMC,EAAU,CACdjB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBE,KAAMrB,KAAKsB,UAAUY,IAEvB,OAAOjB,MAAMJ,EAAUsB,GAASZ,MAAK,SAAAC,GAAG,OAAIA,EAAIE,WAhBhDU,SAmBF,WACE,OAAOnB,MAAMJ,GAAUU,MAAK,SAAAC,GAAG,OAAIA,EAAIE,WAnBvCW,WA0EF,SAAoBH,GAClB,IAAMC,EAAU,CACdjB,OAAQ,SACRC,QAAS,CACP,eAAgB,oBAElBE,KAAMrB,KAAKsB,UAAUY,IAEvB,OAAOjB,MAAMJ,mBAAqBsB,GAASZ,MAAK,SAAAC,GAAG,OAAIA,EAAIE,WAjF3DY,mBAyBF,SAA4BJ,GAC1B,IAAMC,EAAU,CACdjB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBE,KAAMrB,KAAKsB,UAAUY,IAEvB,OAAOjB,MAAMJ,EAAUsB,GAASZ,MAAK,SAAAC,GAAG,OAAIA,EAAIE,WAhChDa,cAoCF,SAAuBC,GACrB,IAAML,EAAU,CACdjB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBE,KAAMrB,KAAKsB,UAAUkB,IAEvB,OAAOvB,MAAMJ,EAAUsB,GAASZ,MAAK,SAAAC,GAAG,OAAIA,EAAIE,WA3ChDe,mBA+CF,SAA4BD,GACxB,IAAML,EAAU,CACdjB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBE,KAAMrB,KAAKsB,UAAUkB,IAEvB,OAAOvB,MAAMJ,EAAUsB,GAASZ,MAAK,SAAAC,GAAG,OAAIA,EAAIE,WAtDlDgB,WA2DF,SAAoBR,GAClB,IAAMC,EAAU,CACdjB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBE,KAAMrB,KAAKsB,UAAUY,IAEvB,OAAOjB,MAAMJ,mBAAqBsB,GAASZ,MAAK,SAAAC,GAAG,OAAIA,EAAIE,YC5E7D,IAAMb,EAAW,kBAEF,GACboB,OAQF,SAAgBU,GACd,IAAMR,EAAU,CACdjB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBE,KAAMrB,KAAKsB,UAAUqB,IAEvB,OAAO1B,MAAMJ,EAAUsB,GAASZ,MAAK,SAAAC,GAAG,OAAIA,EAAIE,WAfhDkB,aAkBF,WACE,OAAO3B,MAAMJ,GAAUU,MAAK,SAAAC,GAAG,OAAIA,EAAIE,WAlBvCmB,gBA4DF,SAAyBF,GACvB,IAAMR,EAAU,CACdjB,OAAQ,SACRC,QAAS,CACP,eAAgB,oBAElBE,KAAMrB,KAAKsB,UAAUqB,IAEvB,OAAO1B,MAAMJ,wBAAqBsB,GAASZ,MAAK,SAAAC,GAAG,OAAIA,EAAIE,WAnE3DY,mBAwBF,SAA4BJ,GAC1B,IAAMC,EAAU,CACdjB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBE,KAAMrB,KAAKsB,UAAUY,IAEvB,OAAOjB,MAAMJ,EAAUsB,GAASZ,MAAK,SAAAC,GAAG,OAAIA,EAAIE,WA/BhDoB,gBA+CF,SAAyBH,GACvB,IAAMR,EAAU,CACdjB,OAAQ,QACRC,QAAS,CACP,eAAgB,oBAElBE,KAAMrB,KAAKsB,UAAUqB,IAEvB,OAAO1B,MAAMJ,wBAAqBsB,GAASZ,MAAK,SAAAC,GAAG,OAAIA,EAAIE,WAtD3DqB,wBAkCF,SAAiCb,GAC/B,IAAMC,EAAU,CACdjB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBE,KAAMrB,KAAKsB,UAAUY,IAEvB,OAAOjB,MAAMJ,EAAUsB,GAASZ,MAAK,SAAAC,GAAG,OAAIA,EAAIE,Y,YCnCnCsB,EAVE,SAACC,GAAD,OACf,yBAAKC,UAAW,YACb,uEACOD,EAAMrC,KAFhB,aAGoBqC,EAAMN,UAH1B,QAIeM,EAAMf,KACXe,EAAME,UCGHC,G,MATQ,WACnB,OACE,yBAAKF,UAAU,iBACb,kBAAC,SAAD,MACA,0E,eCqGOG,G,wDAvGb,WAAYJ,GAAQ,IAAD,8BACjB,cAAMA,IAmBRK,aAAe,SAACC,GAEd,EAAKC,SAAL,eAEGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,SAxBX,EA4BnBC,aA5BmB,uCA4BJ,WAAOL,GAAP,SAAAM,EAAA,6DACbN,EAAEO,iBADW,kBAGLC,EAAiB9B,OAAO,EAAK+B,OAHxB,sDAKXjD,QAAQC,IAAI,qBALD,wDA5BI,sDAEjB,EAAKgD,MAAQ,CACTN,KAAM,GACNO,YAAa,GACbC,MAAO,GACPC,KAAM,GACNH,MAAM,IAPO,E,4DAuCjB,QAASI,KAAKJ,MAAMN,MAAQU,KAAKJ,MAAMK,OAASD,KAAKJ,MAAMM,WAAaF,KAAKJ,MAAMO,gB,+BAInF,OACE,yBAAKrB,UAAU,aACb,4BAAQA,UAAU,UAAlB,qBADF,eAGI,0BAAMA,UAAU,cAAcsB,SAAUJ,KAAKd,cAC3C,yBAAKJ,UAAU,eACb,yBAAKA,UAAU,aACb,2BAAOuB,KAAK,OAAOvB,UAAU,eAAewB,YAAY,OAAOf,MAAOS,KAAKJ,MAAMN,KAAMA,KAAK,OAAOiB,SAAUP,KAAKd,iBAHxH,eAOE,yBAAKJ,UAAU,cACb,yBAAKA,UAAU,aACb,2BAAOuB,KAAK,OAAOvB,UAAU,eAAewB,YAAY,OAAOf,MAAOS,KAAKJ,MAAMG,KAAMT,KAAK,OAAOiB,SAAUP,KAAKd,gBAFtH,gBAMA,yBAAKJ,UAAU,cACb,yBAAKA,UAAU,aACb,2BAAOuB,KAAK,OAAOvB,UAAU,eAAewB,YAAY,QAAQf,MAAOS,KAAKJ,MAAMA,MAAON,KAAK,QAAQiB,SAAUP,KAAKd,gBAEvH,6BAJF,mBAME,kFAEA,uCACA,4BAAQI,KAAK,SACX,4BAAQC,MAAOS,KAAKJ,MAAME,QAC1B,4BAAQP,MAAOS,KAAKJ,MAAME,OAA1B,UACA,4BAAQP,MAAOS,KAAKJ,MAAME,OAA1B,WACA,4BAAQP,MAAOS,KAAKJ,MAAME,OAA1B,OACA,4BAAQP,MAAOS,KAAKJ,MAAME,OAA1B,iBACA,4BAAQP,MAAOS,KAAKJ,MAAME,OAA1B,SACA,4BAAQP,MAAOS,KAAKJ,MAAME,OAA1B,UACA,4BAAQP,MAAOS,KAAKJ,MAAME,OAA1B,UACA,4BAAQP,MAAOS,KAAKJ,MAAME,OAA1B,QACA,4BAAQP,MAAOS,KAAKJ,MAAME,OAA1B,YACA,4BAAQP,MAAOS,KAAKJ,MAAME,OAA1B,SACA,4BAAQP,MAAOS,KAAKJ,MAAME,OAA1B,QACA,4BAAQP,MAAOS,KAAKJ,MAAME,OAA1B,UACA,4BAAQP,MAAOS,KAAKJ,MAAME,OAA1B,SAvBJ,gBA4BA,yBAAKhB,UAAU,cACb,yBAAKA,UAAU,wBAAf,eAEE,4BAAQuB,KAAK,SAASvB,UAAU,kBAAkB0B,QAASR,KAAKR,cAAhE,YACA,6BACA,kBAAC,IAAD,CAAMiB,GAAG,KAAT,UACA,qC,GA/FYC,cCObC,G,MAPS,SAAC9B,GAAD,OACtB,yBAAKC,UAAW,aACd,kBAAC,EAAD,SCoEW8B,E,4MAtEbhB,MAAQ,CACNN,KAAM,GACNW,MAAO,GACPC,SAAU,GACVC,aAAc,I,EAGhBjB,aAAe,SAACC,GACd,EAAKN,MAAMgC,cAAc,IACzB,EAAKzB,SAAL,eAEGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAI9BC,a,uCAAe,WAAOL,GAAP,SAAAM,EAAA,6DACbN,EAAEO,iBADW,kBAGLoB,EAAYpE,OAAO,EAAKkD,OAHnB,OAKX,EAAKf,MAAMkC,sBAEX,EAAKlC,MAAMmC,QAAQC,KAAK,KAPb,gDAUX,EAAKpC,MAAMgC,cAAc,KAAIK,SAVlB,yD,oHAeb,QAASlB,KAAKJ,MAAMN,MAAQU,KAAKJ,MAAMK,OAASD,KAAKJ,MAAMM,WAAaF,KAAKJ,MAAMO,gB,+BAInF,OACE,yBAAKrB,UAAU,aACb,4BAAQA,UAAU,iBAAlB,WACA,0BAAMA,UAAU,kBAAkBsB,SAAUJ,KAAKR,cAC/C,yBAAKV,UAAU,cACb,yBAAKA,UAAU,aACb,2BAAOuB,KAAK,OAAOvB,UAAU,eAAewB,YAAY,OAAOf,MAAOS,KAAKJ,MAAMN,KAAMA,KAAK,OAAOiB,SAAUP,KAAKd,iBAGtH,yBAAKJ,UAAU,cACb,yBAAKA,UAAU,aACb,2BAAOuB,KAAK,QAAQvB,UAAU,eAAewB,YAAY,QAAQf,MAAOS,KAAKJ,MAAMK,MAAOX,KAAK,QAAQiB,SAAUP,KAAKd,iBAG1H,yBAAKJ,UAAU,cACb,yBAAKA,UAAU,aACb,2BAAOuB,KAAK,WAAWvB,UAAU,eAAewB,YAAY,WAAWf,MAAOS,KAAKJ,MAAMM,SAAUZ,KAAK,WAAWiB,SAAUP,KAAKd,iBAGtI,yBAAKJ,UAAU,cACb,yBAAKA,UAAU,aACb,2BAAOuB,KAAK,WAAWvB,UAAU,eAAewB,YAAY,mBAAmBf,MAAOS,KAAKJ,MAAMO,aAAcb,KAAK,eAAeiB,SAAUP,KAAKd,iBAGtJ,yBAAKJ,UAAU,cACb,yBAAKA,UAAU,yBACb,4BAAQA,UAAU,kBAAkBqC,SAAUnB,KAAKoB,iBAAnD,WADF,WAEE,kBAAC,IAAD,CAAMX,GAAG,KAAT,kB,GA/DWC,aCqCVW,G,wDApBb,WAAYxC,GAAQ,IAAD,8BACjB,cAAMA,IAKRgC,cAAgB,SAACS,GACf,EAAKlC,SAAS,CAAE8B,QAASI,KALzB,EAAK1B,MAAQ,CAAEsB,QAAS,IACxBvE,QAAQC,IAAI,qCAAmCiC,GAH9B,E,qDAWjB,OACE,yBAAKC,UAAU,cACb,kBAAC,EAAD,iBAAgBkB,KAAKnB,MAArB,CAA4BgC,cAAeb,KAAKa,iBAChD,2BAAIb,KAAKJ,MAAMsB,c,GAfER,cCwCVa,G,kNArDb3B,MAAQ,CACNK,MAAO,GACPuB,GAAI,I,EAGNtC,aAAe,SAACC,GACd,EAAKC,SAAL,eAEGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAI9BC,a,uCAAe,WAAOL,GAAP,SAAAM,EAAA,6DACbN,EAAEO,iBADW,kBAGLoB,EAAYnD,MAAM,EAAKiC,OAHlB,OAKX,EAAKf,MAAMkC,sBAEX,EAAKlC,MAAMmC,QAAQC,KAAK,KAPb,gDAUXQ,MAAM,wBAVK,yD,6GAeb,OACE,yBAAK3C,UAAU,aACb,4BAAQA,UAAU,iBAAlB,UACA,0BAAMA,UAAU,kBAAkBsB,SAAUJ,KAAKR,cAC/C,yBAAKV,UAAU,cACb,yBAAKA,UAAU,aACb,2BAAOuB,KAAK,QAAQvB,UAAU,eAAewB,YAAY,QAAQf,MAAOS,KAAKJ,MAAMK,MAAOX,KAAK,QAAQiB,SAAUP,KAAKd,iBAG1H,yBAAKJ,UAAU,cACb,yBAAKA,UAAU,aACb,2BAAOuB,KAAK,WAAWvB,UAAU,eAAewB,YAAY,WAAWf,MAAOS,KAAKJ,MAAM4B,GAAIlC,KAAK,KAAKiB,SAAUP,KAAKd,iBAG1H,yBAAKJ,UAAU,cACb,yBAAKA,UAAU,yBACb,4BAAQA,UAAU,mBAAlB,UADF,eAEE,kBAAC,IAAD,CAAM2B,GAAG,KAAT,kB,GA9CUC,cCkCTgB,G,MAnCA,SAAC7C,GACZ,IAAI8C,EAAM9C,EAAMrC,KAChB,yBAAKsC,UAAU,UACX,kBAAC,IAAD,CAAM2B,GAAG,aAAa3B,UAAU,YAAhC,QADJ,yCAII,kBAAC,IAAD,CAAM2B,GAAG,yBAAyB3B,UAAU,YAA5C,qBAJJ,yCAOI,kBAAC,IAAD,CAAM2B,GAAG,iBAAiB3B,UAAU,YAApC,SAPJ,yCAUI,kBAAC,IAAD,CAAM2B,GAAG,kBAAkB3B,UAAU,YAAYD,EAAMrC,KAAK8C,KAA5D,gBAVJ,yCAaI,kBAAC,IAAD,CAAMmB,GAAG,gBAAgB3B,UAAU,YAAYD,EAAMrC,KAAK8C,KAA1D,cAbJ,yCAgBI,kBAAC,IAAD,CAAMmB,GAAG,GAAG3B,UAAU,WAAW0B,QAAS3B,EAAM+C,cAAhD,WAhBJ,yBAoBA,6BACI,kBAAC,IAAD,CAAMnB,GAAG,SAAS3B,UAAU,eAA5B,UADJ,oBAGI,kBAAC,IAAD,CAAM2B,GAAG,UAAU3B,UAAU,eAA7B,YAGJ,OACI,yBAAKA,UAAU,UACV6C,KCpBEE,G,MATM,WACjB,OACE,yBAAK/C,UAAU,eACb,kBAAC,SAAD,MACA,0EC0HOgD,E,kDAjHb,aAAe,IAAD,8BACZ,gBAmBFF,aAAe,WACbd,EAAYpD,SACZ,EAAK0B,SAAS,CAAE5C,KAAM,QAtBV,EAyBduE,oBAAsB,WACpB,EAAK3B,SAAS,CAAE5C,KAAMsE,EAAYrD,aA1BtB,EA8BdsE,sBAAwB,WACtB,EAAK3C,SAAS,CAAC5C,KAAMsE,EAAYrD,YACjC,IAAMc,EAAYoB,EAAiB9B,SACnClB,QAAQC,IAAI,qCAAmC2B,IAjCnC,EAoCdyD,iBAAmB,WACJ,EAAK5C,SAAS,CAAC5C,KAAMyF,EAAYpE,WAC9ClB,QAAQC,IAAI,8DAtCA,EAyCdsF,mBAAqB,WACnB,IAAM3D,EAAYoB,EAAiBnB,eACnC7B,QAAQC,IAAI,2CAAyC2B,GACrD,EAAKa,SAAS,CAAC5C,KAAMmD,EAAiBwC,KAAK5D,MA1C3C,EAAKqB,MAAQ,CAEXpD,KAAMsE,EAAYrD,UAClBK,KAAM,GACNM,KAAM,GACNW,QAAS,IAPC,E,uLAYZpC,QAAQC,IAAI,4B,SACKkE,EAAYrD,U,OAAzBjB,E,OAEJwD,KAAKZ,SAAS,CAACb,UAAWoB,EAAiBnB,aAAahC,K,qIAiChD,IAAD,OACP,OACE,yBAAKsC,UAAU,IACb,4BAAQA,UAAU,aAAlB,0DACE,kBAAC,EAAD,CACEtC,KAAMwD,KAAKJ,MAAMpD,KACjBoF,aAAc5B,KAAK4B,eAEtB,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,IAAIC,OAAQ,gBAAGtB,EAAH,EAAGA,QAAH,OAC5B,kBAAE,EAAF,CACEA,QAASA,EACTkB,mBAAoB,EAAKA,mBACzB1F,KAAM,EAAKiB,aAIf,kBAAC,IAAD,CAAO2E,OAAK,EAACC,KAAK,UAAUC,OAAQ,gBAAGtB,EAAH,EAAGA,QAAH,OAClC,kBAAC,EAAD,CACEA,QAASA,EACTD,oBAAqB,EAAKA,yBAG9B,kBAAC,IAAD,CAAOqB,OAAK,EAACC,KAAK,SAASC,OAAQ,gBAAGtB,EAAH,EAAGA,QAAH,OACjC,kBAAC,EAAD,CACEA,QAASA,EACTD,oBAAqB,EAAKA,yBAG9B,kBAAC,IAAD,CAAOqB,OAAK,EAACC,KAAK,WAAWC,OAAQ,kBACnC,EAAK1C,MAAMpD,KACX,kBAAC,EAAD,CACEA,KAAM,EAAKoD,MAAMpD,KACjBuC,QAAS,EAAKa,MAAMb,QACpBwD,iBAAkB,EAAKA,mBAIvB,kBAAC,IAAD,CAAU9B,GAAG,kBAEjB,kBAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,kBAAkBC,OAAQ,kBAC1C,EAAK1C,MAAMpD,KACX,kBAAC,EAAD,CACCA,KAAM,EAAKoD,MAAMpD,KACjB+B,UAAW,EAAKqB,MAAMrB,UACtB2D,mBAAoB,EAAKA,qBAGxB,kBAAC,IAAD,CAAUzB,GAAG,aAEjB,kBAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,yBAAyBC,OAAQ,kBAC/C,EAAK1C,MAAMpD,KACX,kBAAC,EAAD,CACAuF,sBAAuB,EAAKA,sBAC5BvF,KAAM,EAAKoD,MAAMpD,OAGjB,kBAAC,IAAD,CAAUiE,GAAG,6B,GA1GTC,aCLE8B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASP,OACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOA,OAAQ,gBAAEtB,EAAF,EAAEA,QAAF,OAAe,kBAAC,EAAD,CAAKA,QAASA,QACrC8B,SAASC,eAAe,SDwHjC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/F,MAAK,SAAAgG,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3G,QAAQ2G,MAAMA,EAAMpC,c","file":"static/js/main.4efba9ea.chunk.js","sourcesContent":["\nfunction setToken(token) {\n    if (token) {\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  //Decodes the token, then extracts and returns the user object\n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  \n  function removeToken() {\n    localStorage.removeItem('token');\n  }\n  \n  export default {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };","import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\nfunction signup(user) {\n  console.log('This is the value of user in userService.signup()', user);\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    headers: new Headers({ 'Content-Type': 'application/json' }),\n    body: JSON.stringify(user)\n  })\n    .then(res => {\n      if (res.ok) return res.json();\n      // Probably a duplicate email\n      throw new Error('Email already taken!');\n    })\n    // Parameter destructuring!\n    .then(({ token }) => tokenService.setToken(token));\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({ 'Content-Type': 'application/json' }),\n    body: JSON.stringify(creds)\n  })\n    .then(res => {\n      // Valid login if we have a status of 2xx (res.ok)\n      if (res.ok) return res.json();\n      throw new Error('Bad Credentials!');\n    })\n    .then(({ token }) => tokenService.setToken(token));\n}\n\nexport default {\n  signup,\n  getUser,\n  logout,\n  login\n};","const BASE_URL = '/api/room/';\n\nexport default {\n  create,\n  getRooms,\n  deleteRoom,\n  addRoomToInventory,\n  addItemToRoom,\n  deleteItemFromRoom,\n  updateRoom\n};\n\nfunction create(room) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n}\n\nfunction getRooms() {\n  return fetch(BASE_URL).then(res => res.json());\n}\n\n// function getNewRoom() {\n//   return fetch(BASE_URL).then(res => res.json());\n// }\n\nfunction addRoomToInventory(room) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n  \n}\n\nfunction addItemToRoom(item) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(item)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n\n}\n\nfunction deleteItemFromRoom(item) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    };\n    return fetch(BASE_URL, options).then(res => res.json());\n  \n  }\n  \n\nfunction updateRoom(room) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL + \"update\", options).then(res => res.json());\n}\n\nfunction deleteRoom(room) {\n  const options = {\n    method: 'DELETE',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL + \"update\", options).then(res => res.json());\n}\n","const BASE_URL = '/api/inventory/';\n\nexport default {\n  create,\n  getInventory,\n  deleteInventory,\n  addRoomToInventory,\n  updateInventory,\n  deleteRoomFromInventory\n};\n\nfunction create(inventory) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(inventory)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n}\n\nfunction getInventory() {\n  return fetch(BASE_URL).then(res => res.json());\n}\n\n// function getNewRoom() {\n//   return fetch(BASE_URL).then(res => res.json());\n// }\n\nfunction addRoomToInventory(room) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n  \n}\n\nfunction deleteRoomFromInventory(room) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL, options).then(res => res.json());\n\n}\n\nfunction updateInventory(inventory) {\n  const options = {\n    method: 'PATCH',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(inventory)\n  };\n  return fetch(BASE_URL + \"update\", options).then(res => res.json());\n}\n\nfunction deleteInventory(inventory) {\n  const options = {\n    method: 'DELETE',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(inventory)\n  };\n  return fetch(BASE_URL + \"update\", options).then(res => res.json());\n}\n","import React from 'react';\n// import Footer from '../Footer';\nimport { Navbar } from 'react-bulma-components';\n//import './HomePage.css';\n\nconst HomePage = (props) => (\n  <div className= \"HomePage\">\n     <h2>Take Inventory Before Disaster Strikes </h2>\n           {props.user}\n           inventory={props.inventory}\n           room={props.room}\n           {props.profile} \n  </div>\n);\n\nexport default HomePage;","import React from 'react';\n// import Footer from '../Footer';\nimport { Navbar } from 'react-bulma-components';\nimport './InventoryPage.css';\n\n const InventoryPage = () => {\n    return (\n      <div className=\"InventoryPage\">\n        <Navbar />\n        <h2>Take Inventory Before Disaster Strikes </h2>\n      </div>\n    );\n  }\n\nexport default InventoryPage;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport inventoryService from '../../utils/inventoryService';\nimport './InventoryForm.css';\n\n\nclass InventoryForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        name: '',\n        description: '',\n        rooms: '', \n        city: '',\n        state:'',\n      };\n  }\n  \n  // handleUpdate = async (e) => {\n  //   e.preventDefault();\n  //   try {\n  //     await experienceService.addJobToExperience(this.state);\n  //   }catch (err){\n  //     console.log('Invalid user data');\n  //   }\n  // }\n\n  handleChange = (e) => {\n    // this.props.updateMessage('');\n    this.setState({\n      // Using ES2015 Computed Property Names\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await inventoryService.create(this.state);\n    } catch (err) { \n      console.log('Invalid user data');\n      // this.updateMessage(err.message);\n    }\n  };\n\n  isFormInvalid() {\n    return !(this.state.name && this.state.email && this.state.password === this.state.passwordConf);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"header\">Create Your Rooms</header>\n        &nbsp;&nbsp;&nbsp;\n          <form className=\"form-inline\" onSubmit={this.handleChange} >\n            <div className=\"form-inline\">\n              <div className=\"col-sm-12\">\n                <input type=\"text\" className=\"form-control\" placeholder=\"Name\" value={this.state.name} name=\"name\" onChange={this.handleChange} />\n              </div>\n            </div>\n          &nbsp;&nbsp;&nbsp;\n            <div className=\"form-group\">\n              <div className=\"col-sm-12\">\n                <input type=\"text\" className=\"form-control\" placeholder=\"city\" value={this.state.city} name=\"city\" onChange={this.handleChange} />\n              </div>\n              &nbsp;&nbsp;&nbsp;\n            </div>\n            <div className=\"form-group\">\n              <div className=\"col-sm-12\">\n                <input type=\"text\" className=\"form-control\" placeholder=\"state\" value={this.state.state} name=\"state\" onChange={this.handleChange} />\n              </div>\n              <hr />\n              &nbsp;&nbsp;&nbsp;&nbsp;\n              <label>\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n              <span>Rooms</span>\n              <select name='rooms'>\n                <option value={this.state.rooms}></option>\n                <option value={this.state.rooms}>Living</option>\n                <option value={this.state.rooms}>Kitchen</option>\n                <option value={this.state.rooms}>Bed</option>\n                <option value={this.state.rooms}>Entertainment</option>\n                <option value={this.state.rooms}>Guest</option>\n                <option value={this.state.rooms}>Office</option>\n                <option value={this.state.rooms}>Studio</option>\n                <option value={this.state.rooms}>Bath</option>\n                <option value={this.state.rooms}>Basement</option>\n                <option value={this.state.rooms}>Study</option>\n                <option value={this.state.rooms}>Play</option>\n                <option value={this.state.rooms}>Cabana</option>\n                <option value={this.state.rooms}>Gym</option>\n              </select>\n            </label>\n            &nbsp;&nbsp;&nbsp;\n            </div>\n            <div className=\"form-group\">\n              <div className=\"col-sm-9 text-center\">\n              &nbsp;&nbsp;&nbsp;\n                <button type=\"submit\" className=\"btn btn-default\" onClick={this.handleSubmit}>Add Room</button>\n                <hr />\n                <Link to='/'>Cancel</Link>\n                <hr />\n              </div>\n            </div>\n          </form>\n      </div>\n    );\n  }\n}\n\nexport default InventoryForm;\n","import React from 'react';\nimport InventoryForm from '../../components/InventoryForm/InventoryForm'\nimport './CreateInventory.css';\n\n// I want to create a room with contents on this page\n\nconst CreateInventory = (props) => (\n  <div className= \"container\">\n    <InventoryForm\n    />\n  </div>\n);\n\nexport default CreateInventory;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport userService from '../../utils/userService';\n\nclass SignupForm extends Component {\n\n  state = {\n    name: '',\n    email: '',\n    password: '',\n    passwordConf: ''\n  };\n\n  handleChange = (e) => {\n    this.props.updateMessage('');\n    this.setState({\n      // Using ES2015 Computed Property Names\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await userService.signup(this.state);\n      // Let <App> know a user has signed up!\n      this.props.handleSignupOrLogin();\n      // Successfully signed up - show GamePage\n      this.props.history.push('/');\n    } catch (err) {\n      // Invalid user data (probably duplicate email)\n      this.props.updateMessage(err.message);\n    }\n  }\n\n  isFormInvalid() {\n    return !(this.state.name && this.state.email && this.state.password === this.state.passwordConf);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"header-footer\">Sign Up</header>\n        <form className=\"form-horizontal\" onSubmit={this.handleSubmit} >\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"text\" className=\"form-control\" placeholder=\"Name\" value={this.state.name} name=\"name\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"email\" className=\"form-control\" placeholder=\"Email\" value={this.state.email} name=\"email\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"password\" className=\"form-control\" placeholder=\"Password\" value={this.state.password} name=\"password\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"password\" className=\"form-control\" placeholder=\"Confirm Password\" value={this.state.passwordConf} name=\"passwordConf\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12 text-center\">\n              <button className=\"btn btn-default\" disabled={this.isFormInvalid()}>Sign Up</button>&nbsp;&nbsp;\n              <Link to='/'>Cancel</Link>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SignupForm;\n","import React, { Component } from 'react';\n// import React, { useState, Component } from 'react';\nimport SignupForm from '../../components/SignupForm/SignupForm';\nimport './SignupPage.css';\n\n/* Refactored to use declarative function instead of class  */\n\n// function SignupPage(props) {\n//   const [message, setMessage] = useState('');\n//   console.log(\"Hey the signup page\");\n \n//   return (\n//     <div className='SignupPage'>\n//       <SignupForm {...props} updateMessage={setMessage} />\n//       <p>{console.log(\"In the return section --->\")}</p>\n//       <p>{message}</p>\n//     </div>\n//   );\n// };  \n\nclass SignupPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { message: '' }\n    console.log(\"In the constructor section --->\", props);\n  }\n\n  updateMessage = (msg) => {\n    this.setState({ message: msg });\n  }\n\n  render() {\n    return (\n      <div className='SignupPage'>\n        <SignupForm {...this.props} updateMessage={this.updateMessage} />\n        <p>{this.state.message}</p>\n      </div>\n    );\n  }\n}\n\nexport default SignupPage;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './LoginPage.css';\nimport userService from '../../utils/userService';\n\nclass LoginPage extends Component {\n\n  state = {\n    email: '',\n    pw: ''\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      // Using ES2015 Computed Property Names\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await userService.login(this.state);\n      // Let <App> know a user has signed up!\n      this.props.handleSignupOrLogin();\n      // Successfully signed up - show GamePage\n      this.props.history.push('/');\n    } catch (err) {\n      // Use a modal or toast in your apps instead of alert\n      alert('Invalid Credentials!');\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"LoginPage\">\n        <header className=\"header-footer\">Log In</header>\n        <form className=\"form-horizontal\" onSubmit={this.handleSubmit} >\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"email\" className=\"form-control\" placeholder=\"Email\" value={this.state.email} name=\"email\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12\">\n              <input type=\"password\" className=\"form-control\" placeholder=\"Password\" value={this.state.pw} name=\"pw\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12 text-center\">\n              <button className=\"btn btn-default\">Log In</button>&nbsp;&nbsp;&nbsp;\n              <Link to='/'>Cancel</Link>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './NavBar.css';\n\nconst NavBar = (props) => {\n    let nav = props.user ?\n    <div className='navbar'>\n        <Link to='/home-page' className='nav-link'>Home</Link> \n        &nbsp;&nbsp;|||&nbsp;&nbsp;&nbsp;|||&nbsp;&nbsp;&nbsp;\n        \n        <Link to='/create-inventory-page' className='nav-link'>Create Your Rooms</Link> \n        &nbsp;&nbsp;|||&nbsp;&nbsp;&nbsp;|||&nbsp;&nbsp;&nbsp;\n        \n        <Link to='inventory-page' className='nav-link'>Rooms</Link> \n        &nbsp;&nbsp;|||&nbsp;&nbsp;&nbsp;|||&nbsp;&nbsp;&nbsp;\n        \n        <Link to='/inventory-page' className='nav-link'>{props.user.name}'s Inventory</Link> \n        &nbsp;&nbsp;|||&nbsp;&nbsp;&nbsp;|||&nbsp;&nbsp;&nbsp;\n        \n        <Link to='/profile-page' className='nav-link'>{props.user.name}'s Profile</Link> \n        &nbsp;&nbsp;|||&nbsp;&nbsp;&nbsp;|||&nbsp;&nbsp;&nbsp;\n        \n        <Link to='' className='nav-link' onClick={props.handleLogout}>LOG OUT</Link>\n         &nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\n    </div>\n    :\n    <div>\n        <Link to='/login' className='NavBar-link'>LOG IN</Link>\n        &nbsp;&nbsp;|&nbsp;&nbsp;\n        <Link to='/signup' className='NavBar-link'>SIGN UP</Link>\n    </div>;\n\n    return(\n        <div className='NavBar'>\n            {nav}\n        </div>\n    );\n};\n\nexport default NavBar;","import React from 'react';\n// import Footer from '../Footer';\nimport { Navbar } from 'react-bulma-components';\nimport './ProfilePage.css';\n\n const ProfilePage = () => {\n    return (\n      <div className=\"ProfilePage\">\n        <Navbar />\n        <h2>Take Inventory Before Disaster Strikes </h2>\n      </div>\n    );\n  }\n\nexport default ProfilePage;","import React, {Component} from 'react';\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport './App.css';\n\n/* The following imports are named exports from inventoryu */\nimport userService from '../../utils/userService';\nimport roomService from '../../utils/roomService';\nimport inventoryService from '../../utils/inventoryService';\nimport HomePage from '../HomePage/HomePage';\nimport InventoryPage from '../InventoryPage/InventoryPage';\nimport CreateInventory from '../CreateInventoryPage/CreateInventory';\nimport SignupPage from '../SignupPage/SignupPage';\nimport LoginPage from '../LoginPage/LoginPage';\nimport NavBar from '../../components/NavBar/NavBar';\nimport ProfilePage from '../ProfilePage/ProfilePage';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      // Initialize user if there's a token, otherwise null\n      user: userService.getUser(),\n      room: [],\n      item: [],\n      profile: []\n    };\n  }\n\n  async componentDidMount () {\n    console.log(\"componentDidMount--->\");\n    let user = await userService.getUser();\n    // const inventory = await inventoryService.getInventory();\n    this.setState({inventory: inventoryService.getInventory(user)});\n  }\n\n\n  \n  handleLogout = () => {\n    userService.logout();\n    this.setState({ user: null });\n  }\n\n  handleSignupOrLogin = () => {\n    this.setState({ user: userService.getUser() });\n    //console.log(\"Logged in usr---->\", user);\n  }\n\n  handleCreateInventory = () => {\n    this.setState({user: userService.getUser()});\n    const inventory = inventoryService.create();\n    console.log(\"Logged in user's Inventory---->\", inventory);\n  }\n\n  handleCreateRoom = () => {\n    const room = this.setState({user: roomService.create()});\n    console.log(\"This is the handleCreateRoom Function in App.js ----->\");\n  }\n\n  handleGetInventory = () => {\n    const inventory = inventoryService.getInventory(); \n    console.log(\"Inventory in database -------------->\", inventory);\n    this.setState({user: inventoryService.show(inventory)})\n  }\n\n  \n  render() {\n    return ( \n      <div className=\"\"> \n        <header className='container'> &nbsp;&nbsp;&nbsp; Take Inventory Before Disaster Strikes  </header>\n          <NavBar \n            user={this.state.user}\n            handleLogout={this.handleLogout}\n            />\n         <Switch>\n          <Route exact path='/' render={({ history }) =>\n            < HomePage\n              history={history}\n              handleGetInventory={this.handleGetInventory}\n              user={this.getUser}\n            />\n            \n          } />\n          <Route exact path='/signup' render={({ history }) =>\n            <SignupPage\n              history={history}\n              handleSignupOrLogin={this.handleSignupOrLogin}\n            />\n          } />\n          <Route exact path='/login' render={({ history }) =>\n            <LoginPage\n              history={history}\n              handleSignupOrLogin={this.handleSignupOrLogin}\n            />\n          } />\n          <Route exact path='/profile' render={() =>\n            this.state.user ?\n            <ProfilePage\n              user={this.state.user}\n              profile={this.state.profile}\n              handleGetProfile={this.handleGetProfile}\n              \n            />\n            :\n              <Redirect to='/home-page' />\n          } />\n          <Route exact path='/inventory-page' render={() =>\n            this.state.user ?\n            <InventoryPage\n             user={this.state.user}\n             inventory={this.state.inventory}\n             handleGetInventory={this.handleGetInventory}\n            />\n            :\n              <Redirect to='/Home' />\n          } />\n          <Route exact path='/create-inventory-page' render={() =>\n              this.state.user ?\n              <CreateInventory\n              handleCreateInventory={this.handleCreateInventory}\n              user={this.state.user}              \n              />\n              :\n              <Redirect to='/inventory-Page' />\n          } />\n        </Switch> \n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\n\nReactDOM.render(\n    <Router>\n        <Route render={({history}) => <App history={history} />} />\n    </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();"],"sourceRoot":""}